)PANEL VERSION=1 FORMAT=1

)COMMENT

Defaults for HOME() and CMD() on the BODY statement are ZCMD
             WINDOW(w,d)
             If HOME() and CMD() are defined, they must be fields on the panel.
             If no CMD() is defined, it defaults to ZCMD if this is on the panel, else there is no command field.
             If no HOME() is defined, it defaults to the command line, if one is defined.
             SCROLL(fld)
             Define the scroll field to be used.  It must also be defined as a field in the panel body
             Default is ZSCROLL

Format for fields, literals, proc, etc

PANELTITLE Title of the panel that appears on screen.  Also appears in the task list if PANELDESCR is not defined.
PANELDESCR Description of the panel.  Appears in the Task List (SWAP LIST) if defined.
           At least one of these should be defined for a panel so a description appears in the Task List
           Variables are allowed.

LITERAL row column cuaFieldType display_literal
FIELD   row column length cuaFieldType name
DYNAREA row column width depth name shadow_name DATAIN(xx) DATAOUT(xx) USERMOD(xx) DATAMOD(xx)

TBMODEL row depth CLEAR(var1,var2,) ROWS(ALL|SCAN)
        Position of the scrollable area.  Clear variables before fetching rows (eg. for extension variables)
        ROWS(ALL|SCAN) checked but not yet implemented
TBFIELD column length cuaFieldType name
        (column of '+n'  is n relative to the start of the previous field)
        (column of '++n' is n relative to the end of the previous field)

ABC    DESC(abc_name)
PDC    DESC(pdc_name)
PDC    DESC(pdc_name)
ACTION RUN(command)
PDC    DESC(pdc_name) ACTION RUN(command)
ABCINIT / ABCPROC

BOX     row column width depth colour title

LITERAL, PANELTITLE and PANELDESCR can contain dialogue variables

PROC | INIT | REINIT :

     VER (&VAR,NB|NONBLANK,MSG=MSGID)
     VER (&VAR,NB,LIST,VAL1,VAL2,VAL3,MSG=MSGID)
     VER (&VAR,LISTX,VAL1,VAL2,VAL3,MSG=MSGID)
     VER (&VAR,NB,PICT,xxxxx,MSG=MSGID)
     VER (&VAR,NB,NUM,MSG=MSGID)
     VER (&VAR,NB,HEX,MSG=MSGID)
     VER (&VAR,NB,OCT,MSG=MSGID)

     NB|NONBLANK and MSG= are optional.  For LISTX, NONBLANK is implied.

     .HELP   = ABC123  (panel help member)
     .MSG    = ABC123  (set the message)
     .CURSOR = ZCMD    (set cursor position)
     .RESP   = END or ENTER (set the user response)
     &A      = .RESP   (get the user response)
     &CURS   = .CURSOR (get cursor position)
     &A      = HELLO
     &B      = &A
     &B      = 'World'
     &C      = UPPER(B)
     &L      = LENGTH(ZCMD)
     &L      = LENGTH(.MSG)
     &WS     = WORDS(ZCMD)
     &WS     = WORDS(.TRAIL)
     &RV     = REVERSE(ZCMD)

     &Z      Special variable representing null

     GOTO LABEL
     LABEL:
     LABEL: (statement)

     IF...ELSE statements are indentation sensitive
     IF ( &ZCMD = &A ) can also be a word or quoted (CANCEL,'Bye')
     IF (&V EQ A,B,C,D) true if var V is any of the list
     IF (&V NE A,B,C,D) true if var V is none of the list
     IF (VER(&ZCMD,LIST,CAN)) Verify within an IF statement (no MSG= allowed)
     IF ( cond AND cond OR cond ) AND has a higher precedence than OR
     ELSE
     EXIT  exit panel processing.
     &ZCMD = TRUNC( &CMD, 3 )
     &ZCMD = TRUNC( &CMD, '.' )
     &REST = .TRAIL
     &ZCMD = TRANS( &ZCMD Y,YES N,NO )
     &ZCMD = TRANS( &ZCMD Y,YES N,NO *.* )
     &ZCMD = TRANS( &ZCMD Y,YES N,NO *.? )

     At end of the )PROC section or EXIT, if .MSG set, re-issue panel (no automatic field updates - use REFRESH()),
     else return to program

     VGET VAR1 PROFILE | SHARED | ASIS
     VGET (VAR1,VAR2,VAR3) PROFILE | SHARED | ASIS

     VPUT VAR1 PROFILE | SHARED
     VPUT (VAR1,VAR2,VAR3) PROFILE | SHARED | ASIS

PROC | REINIT :

     REFRESH(*)                - Refresh all panel fields from the function pool
     REFRESH(FLDA,FLDB,FLDC)   - Refresh specified panel fields from the function pool

FIELD :
    FIELD(ABCD) EXEC('SELECT PGM(XYZ) PARM(P1)') PASS(FLD1 FLD2 ... )
    Invoke program XYZ when primary command FIELDEXC is entered and the cursor is on the field ABCD.
    The field value will be added to the end of the PARM value on invoking program XYZ and passed fields will
    be in ZFEDATA1, ZFEDATA2, etc that reside in the SHARED pool.
    The field value will be replaced with ZRESULT of program XYZ (if ZRC = 0) when the program terminates
    (Intended use is for file/directory name expansion but a general implementation)
    ZRC = 8 will sound a beep and not replace the field


)ENDCOMMENT

)INCLUDE STD_PDC
)INCLUDE HLP_PDC

)BODY CMD(ZCMD) HOME(ZCMD)

PanelTitle "Primary Menu Panel"

LITERAL   4    2    FP  "Options ===> "
FIELD     4   15   MAX   NEF   CAPS(On),pad(USER),just(left),numeric(off),skip(on) ZCMD

literal  6  2    SAC  "0"
literal  6  5    PS   "Settings"
literal  6  16   NT   "Display and alter user settings"

literal  7  2    SAC  "1"
literal  7  5    PS   "Browse"
literal  7  16   NT   "Browse files"

literal  8  2    SAC  "2"
literal  8  5    PS   "Edit"
literal  8  16   NT   "Edit files"

literal  9  2    SAC  "3"
literal  9  5    PS   "Utilities"
literal  9  16   NT   "File Utilities"

literal  10  2    SAC  "4"
literal  10  5    PS   "Testing"
literal  10  16   NT   "Invoke Testing Program"

literal  11  2    SAC  "5"
literal  11  5    PS   "Tasks"
literal  11  16   NT   "Display Tasks and System Resource Usage"

literal  12  2    SAC  "6"
literal  12  5    PS   "Command"
literal  12  16   NT   "Enter Commands"

literal  13  2    SAC  "7"
literal  13  5    PS   "Dialogue"
literal  13  16   NT   "Dialogue Testing"

literal  14  2    SAC  "8"
literal  14  5    PS   "Lspf Log"
literal  14  16   NT   "Browse Lspf Log"

literal  15  2    SAC  "9"
literal  15  5    PS   "Appl Log"
literal  15  16   NT   "Browse Application Log"

literal  16  2    SAC  "10"
literal  16  5    PS   "Functions"
literal  16  16   NT   "Invoke dialogue functions or selection panel"

literal  18  2    SAC  "D"
literal  18  5    PS   "MySQL"
literal  18  16   NT   "MySQL Database Actions"

literal  19  2    SAC  "U"
literal  19  5    PS   "User Menu"
literal  19  16   NT   "User Actions"

literal  20  2    SAC  "S"
literal  20  5    PS   "System"
literal  20  16   NT   "System Utilities"

literal  22  2    SAC  "T"
literal  22  5    PS   "Tutorial"
literal  22  16   NT   "Start Tutorial"

literal  23  2    SAC  "X"
literal  23  5    PS   "Terminate"
literal  23  16   NT   "Terminate Session"

dynArea  7  MAX-60   21  11  ZAREA  ZSHADOW

Literal  7  MAX-35   FP  "User       :"
Field    7  MAX-22   8    VOI     NONE  ZUSER

literal  8  MAX-35   FP  "Home       :"
field    8  MAX-22   15    VOI     NONE  ZHOME

literal  9  MAX-35   FP  "Node Name  :"
field    9  MAX-22   10   VOI     NONE  ZNODNAME

literal  10  MAX-35  FP  "Machine    :"
field    10  MAX-22  8    VOI     NONE  ZMACHINE

literal  11  MAX-35  FP  "Environment:"
field    11  MAX-22  15   VOI     NONE  ZENVIR

literal  12  MAX-35  FP  "System Name:"
field    12  MAX-22  10    VOI     NONE  ZSYSNAME

literal  13  MAX-35  FP  "OS Release :"
field    13  MAX-22  15    VOI    NONE  ZOSREL

literal  15  MAX-35  FP  "Date       :"
field    15  MAX-22  11   VOI     NONE  ZDATEL

literal  16  MAX-35  FP  "Time       :"
field    16  MAX-22  8    VOI     NONE  ZTIMEL

literal   26    2    FP     "Enter"
literal   26    8    PS     "HELP"
literal   26    13   FP     "to display basic information, or"
literal   26    46   PS     "X"
literal   26    48   FP     "to exit"

)INIT
&ZPRIM  = YES
.CURSOR = ZCMD

)PROC
IF (&ZCMD EQ DATE)
   &ZCMD = 'DATE MM/YYYY'
   REFRESH ZCMD
   .MSG = PSYS011O
   EXIT

&W1  = TRUNC(&ZCMD,' ')
&ENT = .TRAIL
&W2S = WORDS(ENT)
&W2L = LENGTH(ENT)

IF (&W1 = 'DATE')
   &MM  = TRUNC(&ENT,2)
   &SEP = .TRAIL
   &SEP = TRUNC(&SEP,1)
   IF (&W2S NE 1 OR &W2L NE 7 OR &SEP NE '-','/','.')
      .MSG    = PSYS011O
      .CURSOR = ZCMD
   EXIT

&ZSEL = TRANS( TRUNC( &ZCMD,'.' ) ,
               0,'PANEL(PPSET0A) NEWPOOL ADDPOP'
               1,'PGM(&ZFLSTPGM) PARM("") NEWAPPL(ISR) PASSLIB SCRNAME(FILES)'
               2,'PGM(&ZEDITPGM)  NEWAPPL(ISR) PASSLIB SCRNAME(EDIT)'
               3,'PGM(PUTLS0A) NEWAPPL(UTL) SCRNAME(UTILS)'
               4,'PANEL(PPTEST01) NEWAPPL(TEST) SCRNAME(TESTING)'
               5,'PGM(PPSP01A) NEWAPPL(TASK) PARM(TASKS) SCRNAME(TASKS)'
               6,'PGM(PCMD0A) NEWAPPL SCRNAME(COMMANDS)'
               7,'PANEL(PDLGTST1)'
               8,'PGM(PPSP01A) PARM(SL) NEWAPPL(TEST) SCRNAME(LOG)'
               9,'PGM(PPSP01A) PARM(AL) NEWAPPL SCRNAME(LOG)'
               10,'CMD(%porexx5) NEWAPPL(NAPL) LANG(REXX) SCRNAME(RUNAPPL)'
               D,'PGM(PSQLAPL1) NEWAPPL(SQL)'
               U,'PANEL(PUSER0A) NEWAPPL(USR) SCRNAME(USER)'
               S,'PGM(PSYST0A) PARM(SL) NEWAPPL(SYSA) SCRNAME(SYSTEM)'
               T,'PGM(&ZHELPPGM)'
               X,EXIT
              &Z,&Z
               *,'?'
            )
)PNTS
FIELD( ZPS01001 ) VAR(ZCMD)  VAL(0)
FIELD( ZPS01002 ) VAR(ZCMD)  VAL(1)
FIELD( ZPS01003 ) VAR(ZCMD)  VAL(2)
FIELD( ZPS01004 ) VAR(ZCMD)  VAL(3)
FIELD( ZPS01005 ) VAR(ZCMD)  VAL(4)
FIELD( ZPS01006 ) VAR(ZCMD)  VAL(5)
FIELD( ZPS01007 ) VAR(ZCMD)  VAL(6)
FIELD( ZPS01008 ) VAR(ZCMD)  VAL(7)
FIELD( ZPS01009 ) VAR(ZCMD)  VAL(8)
FIELD( ZPS01010 ) VAR(ZCMD)  VAL(9)
FIELD( ZPS01011 ) VAR(ZCMD)  VAL(10)
FIELD( ZPS01012 ) VAR(ZCMD)  VAL(D)
FIELD( ZPS01013 ) VAR(ZCMD)  VAL(U)
FIELD( ZPS01014 ) VAR(ZCMD)  VAL(S)
FIELD( ZPS01015 ) VAR(ZCMD)  VAL(T)
FIELD( ZPS01016 ) VAR(ZCMD)  VAL(X)
FIELD( ZPS01017 ) VAR(ZCMD)  VAL(HELP)
FIELD( ZPS01018 ) VAR(ZCMD)  VAL(X)

)HELP


)END
