This is the default SYSTEM help member.

These commands are valid on any panel.

Primary Commands:
-----------------

Builtin:
********
ACTION   Move cursor to the action bar, or the next entry if already on the action bar
DISCARD  Discard the screen updates and refresh from the previous output
FIELDEXC Execute the file-level command (if the cursor is on the field) defined in the panel )FIELD section
SPLIT    Split the screen
SWAP     Swap logical screen
         NEXT | PREV | screen-number | p q | screen-name
         Extensions:
          p q
          p - switch active to screen-name | screen-number | '*'
          q - switch alternate to screen-name | screen-number | '*'
             for active, '*' keeps the current active screen and only switches the alternate screen
             for alternate, '*' switches current active to alternate
          SWAP can also be initiated with the SWAP Character and the ENTER key if the option is enabled.
          (SWAP Char must be the first non-blank character, and the cursor must remain on the command field.  Only
           characters up to, but not including the cursor position, are taken into account)
!nnn xx  Execute program nnn with parameter xx (application defaults are NEWAPPL, NEWPOOL)
%nnn xx  Execute oorexx  nnn with parameter xx (application defaults are NEWAPPL, NEWPOOL)


System:
*******
.ABEND   Abend the current application
.HIDE    NULLS. Display field nulls as spaces.
.INFO    Display current application information to the Application Log
.LOAD    Load all applications not already loaded.
.RELOAD  ALL | NEW | modname.  Reload application if not in use.
.SCALE
.SHELL   Suspends NCURSES and invokes the shell specified in the SHELL environment variable
.SHOW    NULLS. Display field nulls as dots.
.SNAP    Snap SHARED and PROFILE pool variables for the current application to the
         Application Log
.STATS   Display table and pool statistics for the current application to the Application Log
.TEST    Put application into test mode
         :: Read messages from disk every time
         :: Set testMode to true


Command Table Entries:
----------------------
SYSTEM
******
CMDS     List of commands (USER, APPLICATION and SYSTEM command tables)
CUA      View/change cua attribute settings
KEYLIST  Change/create keylist settings (displays active or default table keylists)
KEYLISTS Change/create keylist settings (displays all keylist tables)
KEYS     Change pfkey settings
ALOG     Display the Application Log
LOG      Display the lspf Log
NRETRIEV Retrieve next entry from the active (or specified) referral list
         NRETRIEV
         NRETRIEV pos list   eg. NRETRIEV  4 MINE   get the 4th entry from list 'MINE'
         NRETRIEV list pos   eg. NRETRIEV  LSPF 6   get the 6th entry from list 'LSPF'
REFACTF  List the active referral list (accepts a list as parameter)
REFLISTF List the reference list
REFOPENF Open a list of all referral lists

USER
****
EXEC   Execute OOREXX EXEC from the command line (similar to % command character)
FLIST  Display saved file names and execute line command
MODS   List found application modules (Dynamically Loaded Classes) and their status
RUN    Run application (similar to ! command character)
PATHS  Display scrollable list of Path Searches and LIBDEF status
TODO   Display a simple TODO list
VARS   List of SHARED and PROFILE pool variables

Keylists:
=========
As currently implemented, keylists override keys defined in the traditional way.  Leaving a keylist entry blank
will cause the normal key definition to be used.  This is diffent from real ISPF where keylists replace all the
definitions.  In this way, only certain keys need to be defined for a panel keylist, eg. RFIND in EDIT where
it has no other use outside of this panel.  Other keys will remain as before.

In the lspf General Settings (opt 0.0), it is possible to set the application not to fail if a keylist is missing.

