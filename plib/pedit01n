)PANEL VERSION=1 FORMAT=1 KEYLIST(ISRSAB,ISR)

)COMMENT
Panel to change language component colours.
)ENDCOMMENT

)ATTR
30 TYPE(INPUT) CAPS(ON) INTENS(LOW)
31 TYPE(INPUT) CAPS(ON) INTENS(LOW)
32 TYPE(INPUT) CAPS(ON) INTENS(LOW)
33 TYPE(INPUT) CAPS(ON) INTENS(LOW)
34 TYPE(INPUT) CAPS(ON) INTENS(LOW)
35 TYPE(INPUT) CAPS(ON) INTENS(LOW)
36 TYPE(INPUT) CAPS(ON) NOJUMP(ON) INTENS(LOW)

)ABC DESC('File') MNEM(1)
PDC DESC('Reset')          ACTION RUN(>RESET)
PDC DESC('Defaults')       ACTION RUN(>DEFAULTS)
PDC DESC('Save and Exit')  ACTION RUN(END)
PDC DESC('Cancel')         ACTION RUN(CANCEL)

)ABCINIT

)BODY WINDOW(61,18)  CMD(ZCMD)

PANELTITLE 'Language Element Colours for &LANG'

TEXT     4    2   FP 'Command ===>'
FIELD    4  15  MAX  NEF CAPS(ON),PAD(USER) ZCMD

AREA 5 1 61 12 SAREA1

)AREA SAREA1
TEXT 1 5 WASL     'Language Element            Colour  Highlight'
TEXT 2 5 WASL     '--------------------------- ------- ---------'
TEXT 3 5 FP       'Default . . . . . . . . . .'
FIELD 3 33 7 ATTR(30) CD
FIELD 3 41 7 ATTR(30) HD

TEXT 4 5 FP 'Comments  . . . . . . . . .'
FIELD 4 33 7 ATTR(31) CC
FIELD 4 41 7 ATTR(31) HC

TEXT 5 5 FP 'Keywords  . . . . . . . . .'
FIELD 5 33 7 ATTR(32) CK
FIELD 5 41 7 ATTR(32) HK

TEXT 6 5 FP 'Quoted Strings  . . . . . .'
FIELD 6 33 7 ATTR(33) CQ
FIELD 6 41 7 ATTR(33) HQ

TEXT 7 5 FP '&DESC              '
TEXT 7 25 FP '. . . .'
FIELD 7 33 7 ATTR(34) CV
FIELD 7 41 7 ATTR(34) HV

TEXT 8 5 FP 'Special Characters  . . . .'
FIELD 8 33 7 ATTR(35) CS
FIELD 8 41 7 ATTR(35) HS

TEXT 10 5 FP 'Special Characters to'
TEXT 11 5 FP 'Highlight . . . . . . . . .'
FIELD 11 33 MAX ATTR(36) SP

)INIT
&ZWINTTL = &Z
&DESC    = &Z

&CD = TRANS(TRUNC(&CD,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,GREEN)
&HD = TRANS(TRUNC(&HD,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)
IF (&HD EQ 'NORMAL')
   .ATTR(CD) = 'COLOUR(&CD)'
   .ATTR(HD) = 'COLOUR(&CD)'
ELSE
   .ATTR(CD) = 'COLOUR(&CD) HILITE(&HD)'
   .ATTR(HD) = 'COLOUR(&CD) HILITE(&HD)'

&CC = TRANS(TRUNC(&CC,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,TURQ)
&HC = TRANS(TRUNC(&HC,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)
IF (&HC EQ 'NORMAL')
   .ATTR(CC) = 'COLOUR(&CC)'
   .ATTR(HC) = 'COLOUR(&CC)'
ELSE
   .ATTR(CC) = 'COLOUR(&CC) HILITE(&HC)'
   .ATTR(HC) = 'COLOUR(&CC) HILITE(&HC)'

&CK = TRANS(TRUNC(&CK,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,RED)
&HK = TRANS(TRUNC(&HK,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)
IF (&HK EQ 'NORMAL')
   .ATTR(CK) = 'COLOUR(&CK)'
   .ATTR(HK) = 'COLOUR(&CK)'
ELSE
   .ATTR(CK) = 'COLOUR(&CK) HILITE(&HK)'
   .ATTR(HK) = 'COLOUR(&CK) HILITE(&HK)'

&CQ = TRANS(TRUNC(&CQ,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,WHITE)
&HQ = TRANS(TRUNC(&HQ,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)
IF (&HQ EQ 'NORMAL')
   .ATTR(CQ) = 'COLOUR(&CQ)'
   .ATTR(HQ) = 'COLOUR(&CQ)'
ELSE
   .ATTR(CQ) = 'COLOUR(&CQ) HILITE(&HQ)'
   .ATTR(HQ) = 'COLOUR(&CQ) HILITE(&HQ)'

IF (&LANG EQ COBOL,CPP,RUST,TOML)
   &CV = TRANS(TRUNC(&CV,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,BLUE)
   &HV = TRANS(TRUNC(&HV,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)
   IF (&HV EQ 'NORMAL')
      .ATTR(CV) = 'COLOUR(&CV)'
      .ATTR(HV) = 'COLOUR(&CV)'
   ELSE
      .ATTR(CV) = 'COLOUR(&CV) HILITE(&HV)'
      .ATTR(HV) = 'COLOUR(&CV) HILITE(&HV)'
   IF (&LANG EQ RUST)
      &DESC = 'Macros  . . . . . .'
   ELSE
      IF (&LANG EQ CPP,COBOL)
         &DESC = 'Compiler directives'
      ELSE
         &DESC = 'Header  . . . . . .'
ELSE
      .ATTR(CV) = 'TYPE(OUTPUT) COLOUR(BLUE)'
      .ATTR(HV) = 'TYPE(OUTPUT) COLOUR(BLUE)'
      &CV = '********'
      &HV = '********'

IF (&LANG EQ ALL)
   .ATTR(SP) = 'TYPE(OUTPUT)'

&CS = TRANS(TRUNC(&CS,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,YELLOW)
&HS = TRANS(TRUNC(&HS,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)
IF (&HS EQ 'NORMAL')
   .ATTR(CS) = 'COLOUR(&CS)'
   .ATTR(HS) = 'COLOUR(&CS)'
   .ATTR(SP) = 'COLOUR(&CS)'
ELSE
   .ATTR(CS) = 'COLOUR(&CS) HILITE(&HS)'
   .ATTR(HS) = 'COLOUR(&CS) HILITE(&HS)'
   .ATTR(SP) = 'COLOUR(&CS) HILITE(&HS)'


)REINIT
IF (&HD EQ 'NORMAL')
   .ATTR(CD) = 'COLOUR(&CD)'
   .ATTR(HD) = 'COLOUR(&CD)'
ELSE
   .ATTR(CD) = 'COLOUR(&CD) HILITE(&HD)'
   .ATTR(HD) = 'COLOUR(&CD) HILITE(&HD)'

IF (&HC EQ 'NORMAL')
   .ATTR(CC) = 'COLOUR(&CC)'
   .ATTR(HC) = 'COLOUR(&CC)'
ELSE
   .ATTR(CC) = 'COLOUR(&CC) HILITE(&HC)'
   .ATTR(HC) = 'COLOUR(&CC) HILITE(&HC)'

IF (&HK EQ 'NORMAL')
   .ATTR(CK) = 'COLOUR(&CK)'
   .ATTR(HK) = 'COLOUR(&CK)'
ELSE
   .ATTR(CK) = 'COLOUR(&CK) HILITE(&HK)'
   .ATTR(HK) = 'COLOUR(&CK) HILITE(&HK)'

IF (&HQ EQ 'NORMAL')
   .ATTR(CQ) = 'COLOUR(&CQ)'
   .ATTR(HQ) = 'COLOUR(&CQ)'
ELSE
   .ATTR(CQ) = 'COLOUR(&CQ) HILITE(&HQ)'
   .ATTR(HQ) = 'COLOUR(&CQ) HILITE(&HQ)'

IF (&HV EQ 'NORMAL')
   .ATTR(CV) = 'COLOUR(&CV)'
   .ATTR(HV) = 'COLOUR(&CV)'
ELSE
   .ATTR(CV) = 'COLOUR(&CV) HILITE(&HV)'
   .ATTR(HV) = 'COLOUR(&CV) HILITE(&HV)'

IF (&HS EQ 'NORMAL')
   .ATTR(CS) = 'COLOUR(&CS)'
   .ATTR(HS) = 'COLOUR(&CS)'
   .ATTR(SP) = 'COLOUR(&CS)'
ELSE
   .ATTR(CS) = 'COLOUR(&CS) HILITE(&HS)'
   .ATTR(HS) = 'COLOUR(&CS) HILITE(&HS)'
   .ATTR(SP) = 'COLOUR(&CS) HILITE(&HS)'

REFRESH(*)

)PROC
&CD = TRANS(TRUNC(&CD,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,GREEN)
&HD = TRANS(TRUNC(&HD,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)

&CC = TRANS(TRUNC(&CC,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,TURQ)
&HC = TRANS(TRUNC(&HC,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)

&CK = TRANS(TRUNC(&CK,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,RED)
&HK = TRANS(TRUNC(&HK,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)

&CQ = TRANS(TRUNC(&CQ,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,WHITE)
&HQ = TRANS(TRUNC(&HQ,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)

&CV = TRANS(TRUNC(&CV,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,BLUE)
&HV = TRANS(TRUNC(&HV,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)

&CS = TRANS(TRUNC(&CS,1) R,RED G,GREEN B,BLUE P,MAGENTA M,MAGENTA T,TURQ Y,YELLOW W,WHITE *,YELLOW)
&HS = TRANS(TRUNC(&HS,1) U,USCORE B,BLINK R,REVERSE *,NORMAL)

&ZCMD = TRANS(&ZCMD RES,RESET CAN,CANCEL DEF,DEFAULTS *,*)

IF (&ZCMD NE &Z,DEFAULTS,CANCEL,RESET)
   .MSG    = PSYS011C
   .CURSOR = ZCMD
   EXIT

IF (&ZCMD EQ DEFAULTS,RESET)
   .RESP = ENTER
   EXIT

VGET ZVERB SHARED

IF (&ZCMD EQ CANCEL OR &ZVERB EQ CANCEL)
   .RESP = END
   &ZCMD = CANCEL
   EXIT

)END
/* -------------------------------------------------------- */
/* lspf - ISPF for Linux                                    */
/* Copyright (C) 2024 GPL V3 - Daniel John Erdos            */
/* -------------------------------------------------------- */
