)PANEL VERSION=1 FORMAT=1 
/* *************************************************** */
/* Converted by panconv EXEC on 3 Oct 2024 at 15:46:41 */
/* *************************************************** */
)ATTR DEFAULT(%+`)
  + TYPE(TEXT  ) COLOR(GREEN)
  ` TYPE( INPUT) INTENS(LOW ) JUST(LEFT ) HILITE(USCORE)
  ~ TYPE(TEXT) INTENS(HIGH) CAPS(OFF) JUST(ASIS ) COLOR(TURQ)
  [ TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) JUST(LEFT) PAS(ON) COLOR(WHITE)
/*   } AREA(SCRL) EXTEND(ON) panconv */
)BODY 
TEXT 1 2 ATTR(25) 'Tutorial --------------------------'
TEXT 1 38 ATTR(7E) 'lspf System Help'
TEXT 1 55 ATTR(25) '--------------------------- Tutorial'
TEXT 2 2 ATTR(25) 'Selection ===>'
FIELD 2 17 73 ATTR(60) ZCMD
AREA 4 1 90 37 HELP
)AREA HELP
TEXT 1 2 ATTR(2B) 'This is the default SYSTEM help member.'
TEXT 3 2 ATTR(2B) 'These commands are valid on any panel.'
TEXT 5 2 ATTR(2B) 'Primary Commands:'
TEXT 6 2 ATTR(2B) '*---------------*'
TEXT 8 2 ATTR(2B) 'Builtin:'
TEXT 9 2 ATTR(2B) '*------*'
TEXT 10 2 ATTR(2B) 'ACTIONS   Move cursor to the action bar, or the next entry if already on the'
TEXT 11 1 ATTR(2B) '           action bar.'
TEXT 12 1 ATTR(2B) '           ACTIONS x gets pulldown with mnemonic x.'
TEXT 13 1 ATTR(2B) '           ACTIONS x n gets pulldown with mnemonic x and places the cursor on'
TEXT 14 1 ATTR(2B) '           choice n.'
TEXT 16 2 ATTR(2B) 'CRETRIEV  Conditional retrieve.  If the cursor is not on the primary input'
TEXT 17 1 ATTR(2B) '           field, cursor is moved to the primary input field, otherwise it acts'
TEXT 18 1 ATTR(2B) '           as same as the RETRIEVE command.'
TEXT 20 2 ATTR(2B) 'FIELDEXC  Execute the file-level command (if the cursor is on the field)'
TEXT 21 1 ATTR(2B) '           defined in the panel )FIELD section'
TEXT 23 2 ATTR(2B) 'RESIZE    Expand a pop-up to full screen (and toggles back)'
TEXT 25 2 ATTR(2B) 'RETK      Similar to RETP but the command keep list is displayed (commonly used'
TEXT 26 1 ATTR(2B) '           commands you want to keep).'
TEXT 28 2 ATTR(2B) 'RETF      Forward retrieve.'
TEXT 30 2 ATTR(2B) 'RETP      Show the retrieve stack screen.  List is scrollable if the number of'
TEXT 31 1 ATTR(2B) '           entries exceeds the screen size.'
TEXT 32 1 ATTR(2B) '           SHIFT-Delete removes an entry from the retrieve stack, ENTER places'
TEXT 33 1 ATTR(2B) '           the entry on the command line.'
TEXT 34 1 ATTR(2B) '           Selecting the entry with CTRL-e instead of ENTER, simulates enter'
TEXT 35 1 ATTR(2B) '           after retrieving the command (Enter \ to select via function key).'
TEXT 36 1 ATTR(2B) '           Typing characters will filter the list, whereas backspace will remove'
TEXT 37 1 ATTR(2B) '           characters from the end of the filter.  The filter is case'
TEXT 38 1 ATTR(2B) '           insensitive.'
TEXT 39 1 ATTR(2B) '           The filter can be specified as part of the command by placing it'
TEXT 40 1 ATTR(2B) '           after the command verb.  The Delete key removes the filter.'
TEXT 41 1 ATTR(2B) '           CTRL-k keeps the command and CTRL-s switches to the keep list.'
TEXT 42 1 ATTR(2B) '           Shift-Up and Shift-Down moves an entry up/down the stack.'
TEXT 43 1 ATTR(2B) '           If mouse actions are supported:'
TEXT 44 1 ATTR(2B) '           Left click   - select entry under mouse pointer.'
TEXT 45 1 ATTR(2B) '           Middle click - delete entry under mouse pointer.'
TEXT 46 1 ATTR(2B) '           Right click  - remove retrieve stack screen.'
TEXT 47 1 ATTR(2B) '           Scroll wheel - move up/down the retrieve stack screen.'
TEXT 48 1 ATTR(2B) '           Right/left click outside retrieve stack screen removes the screen.'
TEXT 50 2 ATTR(2B) 'RETRIEVE  Retrieve next entry from the retrieve stack.'
TEXT 51 2 ATTR(2B) '          RETRIEVE n retrieves nth entry.'
TEXT 53 2 ATTR(2B) 'SPLIT     Split the screen'
TEXT 54 2 ATTR(2B) 'SWAP      Swap logical screen'
TEXT 55 2 ATTR(2B) '          NEXT | PREV | screen-number | p q | screen-name'
TEXT 56 2 ATTR(2B) '          Extensions:'
TEXT 57 2 ATTR(2B) '           p q'
TEXT 58 2 ATTR(2B) '           p - switch active to screen-name | screen-number | description | ''*'''
TEXT 59 2 ATTR(2B) '           q - switch alternate to screen-name | screen-number | description | ''*'''
TEXT 60 2 ATTR(2B) '              for active, ''*'' keeps the current active screen and only switches'
TEXT 61 2 ATTR(2B) '              the alternate'
TEXT 62 2 ATTR(2B) '              for alternate, ''*'' switches current active to alternate'
TEXT 63 2 ATTR(2B) '           SWAP can also be initiated with the SWAP character if the option is'
TEXT 64 2 ATTR(2B) '           enabled.'
TEXT 65 2 ATTR(2B) '           (See below for further explanation on using the SWAP character.)'
TEXT 66 2 ATTR(2B) '           LISTN - show logical sessions when switching to next screen'
TEXT 67 2 ATTR(2B) '           LISTP - show logical sessions when switching to previous screen'
TEXT 68 2 ATTR(2B) '           NOTES: SWAP LISTN and SWAP LISTP only work when assigned to a'
TEXT 69 1 ATTR(2B) '                   control key between ''a'' and ''z''.  Description will be used if'
TEXT 70 1 ATTR(2B) '                   there is no match on screen name.  Entered characters can'
TEXT 71 1 ATTR(2B) '                   appear anywhere and is case-insensitive.'
TEXT 73 2 ATTR(2B) 'SWAP LIST Show the Active Logical Sessions screen (the ESC key does the same)'
TEXT 74 2 ATTR(2B) 'SWAPBAR   ON | OFF | blank'
TEXT 75 2 ATTR(2B) '          Switch on, off, or toggle the display of the swapbar.'
TEXT 76 2 ATTR(2B) 'WINDOW    Start a popup window move.'
TEXT 79 2 ATTR(2B) 'System:'
TEXT 80 2 ATTR(2B) '*-----*'
TEXT 81 2 ATTR(2B) '.ABEND   Abend the current application'
TEXT 82 2 ATTR(2B) '.AUTO    Auto-update screen every 1second.  Press ESC to interrupt.'
TEXT 83 2 ATTR(2B) '.DEBUG   ON | OFF | level'
TEXT 84 2 ATTR(2B) '         Puts application into debugging mode.  All new applications started on'
TEXT 85 2 ATTR(2B) '         the same logical screen will also have debugging mode turned on.  The'
TEXT 86 2 ATTR(2B) '         level is a number from 1-3.  Level 0 is the same as OFF.'
TEXT 87 2 ATTR(2B) '         :: Read panel from disk each time at the start of the'
TEXT 88 1 ATTR(2B) '             DISPLAY/TBDISPL/PQUERY service.'
TEXT 89 2 ATTR(2B) '         :: Read messages from disk every time.'
TEXT 90 2 ATTR(2B) '         :: Converted panel source will be echoed to the application log'
TEXT 91 1 ATTR(2B) '             (output from the panconv REXX procedure) for debug level 2.'
TEXT 92 2 ATTR(2B) '         :: SHARED variable ZDEBUG is set to the debug level.'
TEXT 93 2 ATTR(2B) '.DISCARD Discard the screen updates and refresh from the previous output.'
TEXT 95 2 ATTR(2B) '.ENQ     Display enqueued resources.  Output goes to the application log.'
TEXT 96 2 ATTR(2B) '.REFRESH Refresh screen when it has become corrupted by non-lspf output.'
TEXT 97 2 ATTR(2B) '.HIDE    NULLS. Display field nulls as spaces.'
TEXT 98 2 ATTR(2B) '.INFO    Display current application information to the Application Log'
TEXT 99 2 ATTR(2B) '.JOBS    Same as .TASKS'
TEXT 100 2 ATTR(2B) '.LOAD    Load all applications not already loaded.'
TEXT 101 2 ATTR(2B) '.RELOAD  ALL | NEW | modname.  Reload application if not in use.'
TEXT 102 2 ATTR(2B) '.RGB     List RGB values of the in-use colours to the lspf log.'
TEXT 103 2 ATTR(2B) '.SCALE'
TEXT 104 2 ATTR(2B) '.SHELL   Suspends NCURSES and invokes the shell specified in the SHELL'
TEXT 105 2 ATTR(2B) '         environment variable (if set)'
TEXT 106 2 ATTR(2B) '.SHOW    NULLS. Display field nulls as dots.'
TEXT 107 2 ATTR(2B) '.SNAP    Snap all loaded SHARED and PROFILE pool variables to the application log.'
TEXT 108 2 ATTR(2B) '.STATS   Write table and pool statistics to the application log.'
TEXT 109 2 ATTR(2B) '.TASKS   Show background tasks - output goes to the lspf log.'
TEXT 112 2 ATTR(2B) 'Command Table Entries:'
TEXT 113 2 ATTR(2B) '*--------------------*'
TEXT 114 2 ATTR(2B) 'SYSTEM'
TEXT 115 2 ATTR(2B) '*----*'
TEXT 116 2 ATTR(2B) 'CTRL     List/modify global control key actions'
TEXT 117 2 ATTR(2B) 'DSLIST   Show a file list'
TEXT 118 2 ATTR(2B) '         Without parms, shows the Personal File Lists screen where you can'
TEXT 119 2 ATTR(2B) '         select an entry.  With a Personal File List, shows the list of files'
TEXT 120 2 ATTR(2B) '         contained in that list (partial list name allowed).  A filter can be'
TEXT 121 2 ATTR(2B) '         added after the Personal File List parameter eg. DSLIST REXX PO*CPP'
TEXT 122 2 ATTR(2B) '         With a file path, shows the entries for the path.'
TEXT 123 2 ATTR(2B) '         (See below for examples.)'
TEXT 124 2 ATTR(2B) 'DXLIST   Show a list of files that match a pattern with a Personal File List or'
TEXT 125 2 ATTR(2B) '         directory.  The difference with DSLIST is that directories are'
TEXT 126 2 ATTR(2B) '         recursively expanded before pattern matching.'
TEXT 127 2 ATTR(2B) '         (See below for examples.)'
TEXT 128 2 ATTR(2B) 'EXHELP   Display panel help.'
TEXT 129 2 ATTR(2B) 'FKA      ON | OFF | SHORT | blank'
TEXT 130 2 ATTR(2B) '         Turn on or off the display of the pfkey area.  Blank toggles between'
TEXT 131 2 ATTR(2B) '         ON, SHORT and OFF.'
TEXT 132 2 ATTR(2B) '         ON displays the long form of the pfkey area.'
TEXT 133 2 ATTR(2B) '         SHORT displays the short form of the pfkey area.'
TEXT 134 2 ATTR(2B) 'KEYL     Change keylist key definitions for the panel the command is entered'
TEXT 135 2 ATTR(2B) '         on.  If a keylist is not active for the panel, the KEYS dialogue will'
TEXT 136 2 ATTR(2B) '         be shown instead.'
TEXT 137 2 ATTR(2B) 'KEYLIST  Parameters are PRIVATE, SHARED, ON, OFF or blank for the dialogue to'
TEXT 138 2 ATTR(2B) '         change/create keylist settings (displays active or default table'
TEXT 139 2 ATTR(2B) '         keylists) PRIVATE causes private and then shared keylists to be'
TEXT 140 2 ATTR(2B) '         searched.  SHARED causes only shared keylists to be searched.'
TEXT 142 2 ATTR(2B) 'KEYLISTS Change/create keylists (displays all private and shared keylist tables'
TEXT 143 2 ATTR(2B) '         in the standard search path).'
TEXT 144 2 ATTR(2B) 'KEYS     Change non-keylist pfkey settings.'
TEXT 145 2 ATTR(2B) 'KEYSHELP Display help for the current keylist.'
TEXT 146 2 ATTR(2B) 'ALOG     Display the Application Log'
TEXT 147 2 ATTR(2B) 'LOG      Display the lspf Log'
TEXT 148 2 ATTR(2B) 'ISPLIBD  Show LIBDEF status'
TEXT 149 2 ATTR(2B) 'NRETRIEV Retrieve next entry from the active (or specified) referral list'
TEXT 150 2 ATTR(2B) '         NRETRIEV'
TEXT 151 2 ATTR(2B) '         NRETRIEV pos list eg. NRETRIEV 4 MINE get the 4th entry from list ''MINE'''
TEXT 152 2 ATTR(2B) '         NRETRIEV list pos eg. NRETRIEV LSPF 6 get the 6th entry from list ''LSPF'''
TEXT 153 2 ATTR(2B) '         The list parameter can be a partial entry in which case the first one'
TEXT 154 2 ATTR(2B) '         matching in alphabetically ascending order will be used.'
TEXT 155 2 ATTR(2B) '         NRETRIEV is cursor sensitive and will place the retrieved file into'
TEXT 156 2 ATTR(2B) '         the field the cursor is currently on, except for dynamic areas and'
TEXT 157 2 ATTR(2B) '         table display fields.  If on the command line or not on a valid field,'
TEXT 158 2 ATTR(2B) '         the file is placed in the field specified by the .NRET panel system'
TEXT 159 2 ATTR(2B) '         variable.'
TEXT 160 2 ATTR(2B) 'PFSHOW   ON | OFF | TAILOR | blank'
TEXT 161 2 ATTR(2B) '         Turn on, off or toggle the display of the pfkey area.  TAILOR allows'
TEXT 162 2 ATTR(2B) '         some customisation of the pfkey display area.'
TEXT 163 2 ATTR(2B) 'RECENT   ALIAS for DSLIST REFLIST'
TEXT 164 2 ATTR(2B) 'REFADDF  xxxx.  Update referral list xxxx with the latest referenced file.'
TEXT 165 2 ATTR(2B) '         Referral list will be created if it does not exist.'
TEXT 166 2 ATTR(2B) 'REFACTF  List the active referral list (accepts a list as parameter - can be'
TEXT 167 2 ATTR(2B) '         generic)'
TEXT 168 2 ATTR(2B) '         REFACTF list    - opens list'
TEXT 169 2 ATTR(2B) '         REFACTF list xx - retrieve entry xx from list'
TEXT 170 2 ATTR(2B) '         A selected entry goes to the .NRET field or the cursor field.'
TEXT 172 2 ATTR(2B) 'REFLISTF List the reference list'
TEXT 173 2 ATTR(2B) '         REFLISTF xx - retrieve entry xx from reflist.'
TEXT 174 2 ATTR(2B) '         A selected entry goes to the .NRET field or the cursor field.'
TEXT 175 2 ATTR(2B) 'REFOPENF Open a list of all referral lists.'
TEXT 176 2 ATTR(2B) '         A selected entry goes to the .NRET field or the cursor field.'
TEXT 178 2 ATTR(2B) 'ZHISTORY Display a history of field entries in a popup window for a supported'
TEXT 179 2 ATTR(2B) '         field.'
TEXT 180 2 ATTR(2B) '         Entries from the list are selected using the cursor position and this'
TEXT 181 2 ATTR(2B) '         will be copied to the field.  Panels have to support field history'
TEXT 182 2 ATTR(2B) '         using the .HIST panel control variable.  Entries can be removed from'
TEXT 183 2 ATTR(2B) '         the list by blanking them out.'
TEXT 184 2 ATTR(2B) '         With a parameter of ''*'', if the cursor is on the command line that is'
TEXT 185 2 ATTR(2B) '         not a history field, the first history field defined for the panel'
TEXT 186 2 ATTR(2B) '         will be displayed.'
TEXT 188 2 ATTR(2B) 'USER'
TEXT 189 2 ATTR(2B) '*--*'
TEXT 190 2 ATTR(2B) 'BR      No parameters - shows the view entry screen.'
TEXT 191 2 ATTR(2B) '        Valid file name - goes straight to browse.'
TEXT 192 2 ATTR(2B) '        Full or partial reflist entry - goes into browse on that entry.'
TEXT 193 2 ATTR(2B) '        (* and ? can be used in the file name).'
TEXT 194 2 ATTR(2B) '        Full or partial referral entry - goes into browse on that entry.'
TEXT 195 2 ATTR(2B) '        (referral list directories are expanded 1 level).'
TEXT 196 2 ATTR(2B) '        Entry can be numeric between 1 and 30 to indicate the file position in'
TEXT 197 2 ATTR(2B) '        the list.  Invalid - issues message PBRO011X.  Referral list can be the'
TEXT 198 2 ATTR(2B) '        first or second parameter.'
TEXT 199 2 ATTR(2B) 'CMDS    List of commands (USER, APPLICATION and SYSTEM command tables)'
TEXT 200 2 ATTR(2B) 'CUAATTR View/change cua attribute settings'
TEXT 201 2 ATTR(2B) 'DIR     Shows file list (same as opt 3.4)'
TEXT 202 2 ATTR(2B) 'ED      No parameters - shows the edit entry screen (performs edit recovery'
TEXT 203 2 ATTR(2B) '        actions).  Valid file name - goes straight to edit.  Full or partial'
TEXT 204 2 ATTR(2B) '        reflist entry - goes into edit on that entry.  (* and ? can be used in'
TEXT 205 2 ATTR(2B) '        the file name).  Full or partial referral entry - goes into edit on'
TEXT 206 2 ATTR(2B) '        that entry.  (referral list directories are expanded 1 level).  Entry'
TEXT 207 2 ATTR(2B) '        can be numeric between 1 and 30 to indicate the file position in the'
TEXT 208 2 ATTR(2B) '        list.  Invalid - issues message PEDT017N.  Referral list can be the'
TEXT 209 2 ATTR(2B) '        first or second parameter.'
TEXT 212 2 ATTR(2B) 'EXEC    Execute a command from the command line.  This can be a builtin command'
TEXT 213 2 ATTR(2B) '        (ALLOC, FREE, LISTA, TIME etc.) or a REXX procedure.'
TEXT 214 2 ATTR(2B) '        EXEC -'
TEXT 215 2 ATTR(2B) '        This will put the terminal into input mode to allow 1 command to be entered.'
TEXT 216 2 ATTR(2B) '        EXEC *'
TEXT 217 2 ATTR(2B) '        This will put the terminal into input mode to allow multiple builtin commands'
TEXT 218 2 ATTR(2B) '        to be entered.'
TEXT 219 2 ATTR(2B) 'FLIST   Display saved file names and execute line command'
TEXT 220 2 ATTR(2B) 'LS      Alias of DIR - Shows file list (same as opt 3.4)'
TEXT 221 2 ATTR(2B) 'MODS    List found application modules (Dynamically Loaded Classes) and their status'
TEXT 222 2 ATTR(2B) 'RUN     Run application (similar to ! command character)'
TEXT 223 2 ATTR(2B) 'PATHS   Display scrollable list of Path Searches and LIBDEF status'
TEXT 224 2 ATTR(2B) 'TASKS   Display a simple task list'
TEXT 225 2 ATTR(2B) 'TODO    Display a simple TODO list'
TEXT 226 2 ATTR(2B) 'VARS    List of SHARED and PROFILE pool variables'
TEXT 229 2 ATTR(2B) 'BUILTIN'
TEXT 230 2 ATTR(2B) '*-----*'
TEXT 231 2 ATTR(2B) 'ALLOCATE Associate a file with a ddname.  Useful for EXECIO.'
TEXT 232 2 ATTR(2B) 'FREE     Free the file/ddname association.'
TEXT 233 2 ATTR(2B) 'LISTALC  List the allocated files.'
TEXT 234 2 ATTR(2B) 'HELP     Simple list of builtin commands'
TEXT 235 2 ATTR(2B) 'TIME     Display the time.'
TEXT 237 2 ATTR(2B) '         Builtin commands are searched for first in an ISPEXEC CMD() statement.'
TEXT 238 2 ATTR(2B) '         Command EXEC issues this.'
TEXT 239 2 ATTR(2B) '         They are also accessible via the REXX address TSO environment.'
TEXT 242 2 ATTR(2B) 'Startup parameters.'
TEXT 243 2 ATTR(2B) '==================='
TEXT 244 2 ATTR(2B) 'lspf can be started with an initial command stack to go straight to the'
TEXT 245 2 ATTR(2B) 'required option or options,'
TEXT 246 2 ATTR(2B) 'eg:'
TEXT 247 2 ATTR(2B) 'lspf 2'
TEXT 248 2 ATTR(2B) 'lspf keys'
TEXT 249 2 ATTR(2B) 'lspf 2;split;1;swap;;'
TEXT 250 2 ATTR(2B) 'lspf start ed'
TEXT 252 2 ATTR(2B) 'assuming ; is set as the command delimiter.'
TEXT 253 2 ATTR(2B) 'If the command delimiter is ; then this may have to be escaped when typing the'
TEXT 254 2 ATTR(2B) 'command stack on the command line or it may be interpreted by the shell program'
TEXT 255 2 ATTR(2B) 'giving unexpected results.'
TEXT 257 2 ATTR(2B) 'If only one parameter is passed and is a valid variable name, the value will be'
TEXT 258 2 ATTR(2B) 'retrieved from the profile.  The value must start with'
TEXT 259 2 ATTR(2B) 'lspf || delimiter || command stack.  The default variable if no parameters are'
TEXT 260 2 ATTR(2B) 'specified is ZSTART.'
TEXT 262 2 ATTR(2B) 'eg.'
TEXT 263 2 ATTR(2B) 'ZSTART = ''lspf;2;split;1;swap'''
TEXT 264 2 ATTR(2B) 'MYSTRT = ''lspf;3.4;split;5'''
TEXT 266 2 ATTR(2B) 'If the variable does not have a value, it will be assumed to be an option/command.'
TEXT 268 2 ATTR(2B) 'A parameter of BASIC will start lspf bypassing processing of the initial'
TEXT 269 2 ATTR(2B) 'command stack variable, ZSTART.'
TEXT 272 2 ATTR(2B) 'SWAP character:'
TEXT 273 2 ATTR(2B) '==============='
TEXT 274 2 ATTR(2B) 'Primary and secondary screens can be set using the swap character.  This can be'
TEXT 275 2 ATTR(2B) 'used in one of two ways: (assuming '' is set as the swap character)'
TEXT 276 2 ATTR(2B) '1)  If the command field is empty, enter swapchar'
TEXT 276 53 ATTR(2B) ' primary'
TEXT 276 63 ATTR(2B) ' alternate and'
TEXT 277 2 ATTR(2B) '    press Enter This will set the primary and alternate screens.'
TEXT 279 2 ATTR(2B) '    eg.  ===> ''EDIT SETTINGS'
TEXT 279 32 ATTR(2B) ' Enter key'
TEXT 280 2 ATTR(2B) '    will set the first EDIT screen as the primary and SETTINGS screen as the'
TEXT 281 2 ATTR(2B) '    alternate.'
TEXT 283 2 ATTR(2B) '    Characters on the command line will not be added to the retrieve buffer.'
TEXT 285 2 ATTR(2B) '2)  If the command line already has data, enter swapchar'
TEXT 285 60 ATTR(2B) ' primary'
TEXT 285 70 ATTR(2B) ' alternate'
TEXT 286 2 ATTR(2B) '    after the data and press the SWAP pfkey.'
TEXT 288 2 ATTR(2B) '    eg.  ===> F ALL .A .B string''FILES'
TEXT 288 42 ATTR(2B) ' PF swap key'
TEXT 289 2 ATTR(2B) '    will switch from the edit session to the first FILES screen.'
TEXT 291 2 ATTR(2B) '    eg.  ===> F ALL .A .B string'''
TEXT 291 37 ATTR(2B) ' PF swap key'
TEXT 292 2 ATTR(2B) '    will act as a simple swap command despite F possibly matching a screen name.'
TEXT 294 2 ATTR(2B) '    Only characters on the command line up to the swap character will be added'
TEXT 295 2 ATTR(2B) '    to the retrieve buffer.'
TEXT 297 2 ATTR(2B) 'Screen number or name may be used in the command.  The name is as set in the'
TEXT 298 2 ATTR(2B) 'swapbar.'
TEXT 299 2 ATTR(2B) 'The cursor must remain on the command field.  Only characters up to, but not'
TEXT 300 2 ATTR(2B) 'including the cursor position, are taken into account.'
TEXT 302 2 ATTR(2B) 'The swap character and its use can be set in option 0.0, General lspf Settings.'
TEXT 305 2 ATTR(2B) 'Keylists:'
TEXT 306 2 ATTR(2B) '========='
TEXT 307 2 ATTR(2B) 'As currently implemented, keylists override keys defined in the traditional'
TEXT 308 2 ATTR(2B) 'way.  Leaving a keylist entry blank will cause the normal key definition to be'
TEXT 309 2 ATTR(2B) 'used.  This is different from real ISPF where keylists replace all the'
TEXT 310 2 ATTR(2B) 'definitions.  In this way, only certain keys need to be defined for a panel'
TEXT 311 2 ATTR(2B) 'keylist, eg. RFIND in EDIT where it has no other use outside of this panel.'
TEXT 312 2 ATTR(2B) 'Other keys will remain as before.'
TEXT 315 2 ATTR(2B) 'Keys:'
TEXT 316 2 ATTR(2B) '====='
TEXT 317 2 ATTR(2B) 'Tab key displays the next pull-down menu, when one is already displayed.  If a'
TEXT 318 2 ATTR(2B) 'pull-down is not displayed, the tab key invokes field execution when on a field'
TEXT 319 2 ATTR(2B) 'that supports it, and is not on the first character and there is a non-blank'
TEXT 320 2 ATTR(2B) 'before the cursor position. This allows file name completion using the tab key.'
TEXT 322 2 ATTR(2B) 'If on the first character, blank before the cursor, or for other fields, it'
TEXT 323 2 ATTR(2B) 'acts as a normal tab and moves the cursor to the next unprotected field.'
TEXT 325 2 ATTR(2B) 'Shift'
TEXT 325 9 ATTR(2B) ' tab moves the cursor to the previous unprotected field, or if'
TEXT 326 2 ATTR(2B) 'pull-downs are displayed, shows the previous pull-down menu.'
TEXT 329 2 ATTR(2B) 'The ESC key does the following:'
TEXT 330 2 ATTR(2B) ' a) Terminates .AUTO mode if active.'
TEXT 331 2 ATTR(2B) ' b) Removes a pull-down if one is displayed'
TEXT 332 2 ATTR(2B) ' c) Removes the Active Logical Sessions display.'
TEXT 333 2 ATTR(2B) ' d) Removes the Command Retrieve Panel (RETP) display.'
TEXT 334 2 ATTR(2B) ' e) Interrupts a busy program (status X-Busy) and displays the Program'
TEXT 335 2 ATTR(2B) ' Interrupt Options screen.'
TEXT 336 2 ATTR(2B) ' f) Cancels a window move if one is pending.'
TEXT 337 2 ATTR(2B) ' g) If application is issuing line output or getting line input, ESC pressed'
TEXT 338 2 ATTR(2B) ' twice, terminates the application.'
TEXT 339 2 ATTR(2B) ' h) Displays Active Logical Sessions if none of the above.'
TEXT 341 2 ATTR(2B) 'Keyboard control keys are supported and can be customised in option 0.9'
TEXT 342 2 ATTR(2B) '(command CTRL).  These are global definitions stored in the system profile, not'
TEXT 343 2 ATTR(2B) 'local profile definitions, unlike PFKEYS.'
TEXT 346 2 ATTR(2B) 'Key combinations'
TEXT 347 2 ATTR(2B) '================'
TEXT 348 2 ATTR(2B) 'Depending on the type of console/emulator, some extra key combinations may be'
TEXT 349 2 ATTR(2B) 'passed to ncurses and have the following effects:'
TEXT 351 2 ATTR(2B) 'Shift'
TEXT 351 9 ATTR(2B) ' End            Moves cursor to the start of a field.'
TEXT 352 2 ATTR(2B) 'Ctrl'
TEXT 352 9 ATTR(2B) ' End            Tabs down to the first input field on the next line.'
TEXT 353 2 ATTR(2B) 'Ctrl'
TEXT 353 9 ATTR(2B) ' Shift'
TEXT 353 17 ATTR(2B) ' End    Not set.'
TEXT 355 2 ATTR(2B) 'Shift'
TEXT 355 9 ATTR(2B) ' LEFT           Move cursor two positions to the left.'
TEXT 356 2 ATTR(2B) 'Shift'
TEXT 356 9 ATTR(2B) ' RIGHT          Move cursor two positions to the right.'
TEXT 357 2 ATTR(2B) 'Ctrl'
TEXT 357 9 ATTR(2B) ' LEFT           Moves cursor to the previous word in a field.  Tabs to'
TEXT 358 2 ATTR(2B) '                       previous field if at beginning.'
TEXT 359 2 ATTR(2B) 'Ctrl'
TEXT 359 9 ATTR(2B) ' RIGHT          Moves cursor to the next word in a field.  Tabs to next'
TEXT 360 2 ATTR(2B) '                       field if at end.'
TEXT 362 2 ATTR(2B) 'Shift'
TEXT 362 9 ATTR(2B) ' Delete         Erase to end of field.  If scrollable, has no effect on'
TEXT 363 2 ATTR(2B) '                       the data after the end of the field or on dynamic'
TEXT 364 2 ATTR(2B) '                       overflow variables.'
TEXT 365 2 ATTR(2B) 'Ctrl'
TEXT 365 9 ATTR(2B) ' Delete         Erase to end of scrollable field.  If not scrollable,'
TEXT 366 2 ATTR(2B) '                       same as Shift'
TEXT 366 39 ATTR(2B) 'Delete.  If a dynamic area with overflow'
TEXT 367 2 ATTR(2B) '                       variables, any input field at the start of the variables'
TEXT 368 2 ATTR(2B) '                       will be cleared also.'
TEXT 369 2 ATTR(2B) 'Ctrl'
TEXT 369 9 ATTR(2B) ' Shift'
TEXT 369 17 ATTR(2B) ' Delete Erase word cursor is on, or next word if on a space.'
TEXT 370 2 ATTR(2B) 'Alt'
TEXT 370 9 ATTR(2B) ' Delete         Erase spaces from the cursor to the next non-blank.'
TEXT 372 2 ATTR(2B) 'Shift'
TEXT 372 9 ATTR(2B) ' Down           Move cursor two positions down.'
TEXT 373 2 ATTR(2B) 'Ctrl'
TEXT 373 9 ATTR(2B) ' Down           Move cursor down and to the first word of the field (if'
TEXT 374 2 ATTR(2B) '                       on an input field)'
TEXT 375 2 ATTR(2B) 'Shift'
TEXT 375 9 ATTR(2B) ' Up             Move cursor two positions up.'
TEXT 376 2 ATTR(2B) 'Ctrl'
TEXT 376 9 ATTR(2B) ' Up             Move cursor up and to the first word of the field (if on'
TEXT 377 2 ATTR(2B) '                       an input field)'
TEXT 379 2 ATTR(2B) 'Alt'
TEXT 379 7 ATTR(2B) ' Up               Retrieve command from stack (RETRIEVE command).'
TEXT 380 2 ATTR(2B) 'Alt'
TEXT 380 7 ATTR(2B) ' Down             Retrieve forward command from stack (RETF command).'
TEXT 382 2 ATTR(2B) 'Ctrl'
TEXT 382 9 ATTR(2B) ' Page Up        Max page up.'
TEXT 383 2 ATTR(2B) 'Ctrl'
TEXT 383 9 ATTR(2B) ' Page Down      Max page down.'
TEXT 385 2 ATTR(2B) 'Shift'
TEXT 385 9 ATTR(2B) ' Home           Move cursor to the start of the first input field on a line.'
TEXT 387 2 ATTR(2B) 'Pressing HOME a second time, returns the cursor to its original location.'
TEXT 388 2 ATTR(2B) 'If an error is made changing a field and an action key has not been pressed,'
TEXT 389 2 ATTR(2B) 'enter .DISCARD primary command (or from the Display pull-down) to discard the'
TEXT 390 2 ATTR(2B) 'updates and refresh the screen as it was before the updates.'
TEXT 393 2 ATTR(2B) 'Mouse'
TEXT 394 2 ATTR(2B) '====='
TEXT 395 2 ATTR(2B) 'Depending on the term type, mouse events may be passed to lspf.  Use option'
TEXT 396 2 ATTR(2B) '0.11 to set the actions for the various events.'
TEXT 398 2 ATTR(2B) 'Default values:'
TEXT 399 2 ATTR(2B) '  Left mouse button single click - move cursor to mouse pointer position.'
TEXT 400 2 ATTR(2B) '  Left mouse button double click - move cursor to mouse pointer position and Enter.'
TEXT 402 2 ATTR(2B) '  Middle mouse button single click - SWAP NEXT.'
TEXT 403 2 ATTR(2B) '  Middle mouse button double click - SPLIT NEW.'
TEXT 405 2 ATTR(2B) '  Right mouse button single click - END.'
TEXT 406 2 ATTR(2B) '  Right mouse button double click - RETURN.'
TEXT 408 2 ATTR(2B) '  Mouse interval 166ms.'
TEXT 409 2 ATTR(2B) '  Scroll amount 1 line.'
TEXT 411 2 ATTR(2B) 'Left mouse press can also be used to move a popup window.  Press the left'
TEXT 412 2 ATTR(2B) 'button until the ''Window move pending'' message appears, move the mouse pointer'
TEXT 413 2 ATTR(2B) 'to the position of the top left window and release the button.'
TEXT 415 2 ATTR(2B) 'For a TERM of xterm-1002 where mouse position is passed by ncurses, the window'
TEXT 416 2 ATTR(2B) 'will move as the mouse pointer moves.  Release the left button to position the'
TEXT 417 2 ATTR(2B) 'window.'
TEXT 419 2 ATTR(2B) 'For a TERM of xterm-1003, after pressing the left button, the window will move'
TEXT 420 2 ATTR(2B) 'even if no button is pressed.  Click the left button to position the window.'
TEXT 422 2 ATTR(2B) 'When output is in line mode, any mouse action is interpreted as an action key.'
TEXT 424 2 ATTR(2B) 'If lspf is being used in a linux terminal with gpm, ncurses may need to be'
TEXT 425 2 ATTR(2B) 'compiled with configure option --with-gpm (as is the case with Arch Linux).'
TEXT 428 2 ATTR(2B) 'Personal File Lists:'
TEXT 429 2 ATTR(2B) '===================='
TEXT 430 2 ATTR(2B) 'Personal File Lists (referral lists) are supported and are an easy and powerful'
TEXT 431 2 ATTR(2B) 'way of navigating the file system.  A list can contain a maximum of 30 entries.'
TEXT 433 2 ATTR(2B) 'Special referral list REFLIST, is updated automatically by various functions in'
TEXT 434 2 ATTR(2B) 'lspf when a file is referenced.'
TEXT 436 2 ATTR(2B) 'See commands REFOPENF, REFACTF and REFLISTF to create, edit and delete referral'
TEXT 437 2 ATTR(2B) 'lists as well as retrieve an entry.'
TEXT 439 2 ATTR(2B) 'Commands DSLIST, DXLIST, ED and BR can be used with Personal File Lists - see'
TEXT 440 2 ATTR(2B) 'examples below.'
TEXT 442 2 ATTR(2B) 'Files can be added to an existing or new Personal File List in the'
TEXT 443 2 ATTR(2B) 'file/directory application (opt 3.4) by using the ADD line command to add a'
TEXT 444 2 ATTR(2B) 'specific file or ''* ADD'' primary command to add all files in the list.  The'
TEXT 445 2 ATTR(2B) 'list used can be set in the 3.4 Options pulldown (default FAV1) or specified'
TEXT 446 2 ATTR(2B) 'after the ''* ADD'' primary command.'
TEXT 448 2 ATTR(2B) 'If the panel contains support for referral lists, a selected entry will be'
TEXT 449 2 ATTR(2B) 'added to the .NRET field if the cursor is on the command line, or the field the'
TEXT 450 2 ATTR(2B) 'cursor is placed on when the command is entered.  If the panel does not support'
TEXT 451 2 ATTR(2B) 'referral lists, message PSYS011X will be issued.'
TEXT 454 2 ATTR(2B) 'DSLIST and DXLIST syntax:'
TEXT 455 2 ATTR(2B) '========================='
TEXT 456 2 ATTR(2B) 'DSLIST (no parameters)'
TEXT 457 2 ATTR(2B) 'DXLIST (no parameters)'
TEXT 458 2 ATTR(2B) 'Shows the list of Personal File Lists.  Selecting gives the DSLIST or DXLIST'
TEXT 459 2 ATTR(2B) '(depending on the initial command)'
TEXT 461 2 ATTR(2B) 'DSLIST aaaaa bbbbb'
TEXT 462 2 ATTR(2B) 'DXLIST aaaaa bbbbb'
TEXT 463 2 ATTR(2B) 'aaaaa - Personal File list or directory.'
TEXT 464 2 ATTR(2B) 'bbbbb - optional filter name. (An ''*'' is added to the front of the filter as'
TEXT 465 2 ATTR(2B) '        the full file name is shown).'
TEXT 467 2 ATTR(2B) 'Both ED and BR expand Personal File List generic entries before matching on the'
TEXT 468 2 ATTR(2B) 'filter.  Hence, an entry in Personal File List APPS of the form:'
TEXT 470 2 ATTR(2B) '/home/daniel/lspf/Apps/*(.cpp|.h)'
TEXT 472 2 ATTR(2B) 'will match ''ED apps pedit*cpp'' and go straight to edit on'
TEXT 473 2 ATTR(2B) '/home/daniel/lspf/Apps/PEDIT01.cpp.  Directories are also expanded 1 level.'
TEXT 475 2 ATTR(2B) 'If the first parameter does not match a referral list, the second parameter is'
TEXT 476 2 ATTR(2B) 'assumed to be the list, so'
TEXT 477 2 ATTR(2B) '===> ED apps pedit*cpp can also be entered as'
TEXT 478 2 ATTR(2B) '===> ED pedit*cpp apps'
TEXT 480 2 ATTR(2B) 'Note:  DXLIST performs a recursive directory expansion so may take some time to'
TEXT 481 2 ATTR(2B) '       complete.  Press ESC to interrupt and send SIGUSR1 signal to the'
TEXT 482 2 ATTR(2B) '       process.  It expands the base directory of any generic entries, so all'
TEXT 483 2 ATTR(2B) '       files will be shown.'
TEXT 485 2 ATTR(2B) 'Only as many characters for the referral list need be entered to make it unique.'
TEXT 488 2 ATTR(2B) 'Referral List examples:'
TEXT 489 2 ATTR(2B) '======================='
TEXT 491 2 ATTR(2B) 'Command ===> DSLIST'
TEXT 492 2 ATTR(2B) 'Lists Personal Files List.  Selecting an entry lists the files in that list.'
TEXT 494 2 ATTR(2B) 'Command ===> RECENT'
TEXT 495 2 ATTR(2B) 'Alias for DSLIST REFLIST.  Lists files in the Reference List.'
TEXT 497 2 ATTR(2B) 'Command ===> DSLIST /tmp'
TEXT 498 2 ATTR(2B) 'Lists directory /tmp'
TEXT 500 2 ATTR(2B) 'Command ===> DSLIST REXX'
TEXT 501 2 ATTR(2B) 'Lists referral list (ie. Personal File List) REXX'
TEXT 503 2 ATTR(2B) 'Command ===> DSLIST REX'
TEXT 504 2 ATTR(2B) 'Lists referral list REXX (if this is the first match for characters ''REX'')'
TEXT 506 2 ATTR(2B) 'Command ===> DSLIST APPS po*cpp'
TEXT 507 2 ATTR(2B) 'Lists referral list APPS with a filter of po*cpp'
TEXT 509 2 ATTR(2B) 'Command ===> DSLIST REF  po*cpp'
TEXT 510 2 ATTR(2B) 'Lists reference list with a filter of po*cpp'
TEXT 512 2 ATTR(2B) 'Command ===> DXLIST APP  po*cpp'
TEXT 513 2 ATTR(2B) 'Lists files in referral list APPS that match filter of po*cpp after directories'
TEXT 514 2 ATTR(2B) 'have been expanded.'
TEXT 516 2 ATTR(2B) 'Command ===> ED pedit*cpp'
TEXT 517 2 ATTR(2B) 'Edits entry PEDIT01.cpp if in the reference list'
TEXT 519 2 ATTR(2B) 'Command ===> ED APPS pedit*cpp'
TEXT 520 2 ATTR(2B) 'Command ===> ED pedit*cpp APPS'
TEXT 521 2 ATTR(2B) 'Edits entry PEDIT01.cpp in the APPS referral list'
TEXT 523 2 ATTR(2B) 'Command ===> BR APP pedit*cpp'
TEXT 524 2 ATTR(2B) 'Command ===> BR pedit*cpp APP'
TEXT 525 2 ATTR(2B) 'Browses entry PEDIT01.cpp in the APPS referral list'
TEXT 527 2 ATTR(2B) 'Command ===> BR REX 2'
TEXT 528 2 ATTR(2B) 'Command ===> BR 2 REX'
TEXT 529 2 ATTR(2B) 'Browses (or views) 2nd entry in the REXX Personal File List'
TEXT 531 2 ATTR(2B) 'Note:  For ED and BR commands, directories in the referral list (except'
TEXT 532 1 ATTR(2B) '        REFLIST) will be expanded one level, so'
TEXT 533 1 ATTR(2B) '        it is not necessary to have generic entries in the list for this,'
TEXT 534 1 ATTR(2B) '        ie'
TEXT 535 1 ATTR(2B) '        ED apps pedi*p'
TEXT 536 1 ATTR(2B) '        with APPS referral list entry /home/daniel/lspf/Apps'
TEXT 537 1 ATTR(2B) '        will still find PEDIT01.cpp in the Apps directory.'
TEXT 539 2 ATTR(2B) 'Search order is as follows:'
TEXT 540 2 ATTR(2B) '1) If file contains ''*'' or ''?'', a case insensitive match using regex.'
TEXT 541 2 ATTR(2B) '2) Case sensitive full match.'
TEXT 542 2 ATTR(2B) '3) Case insensitive full match.'
TEXT 543 2 ATTR(2B) '4) Case sensitive partial match.'
TEXT 544 2 ATTR(2B) '5) Case insensitive partial match.'
TEXT 545 2 ATTR(2B) '6) Case insensitive match anywhere.'
)INIT
 .CURSOR = ZCMD
)PROC
)END
