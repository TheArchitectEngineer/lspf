/*
  Copyright (c) 2015 Daniel John Erdos

  This program is free software; you can redistribute it and/or modify x
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

*/

#define N_GREEN    0x05
#define N_BLUE     0x06
#define N_WHITE    0x07
#define N_RED      0x08
#define N_TURQ     0x09
#define N_MAGENTA  0x0A
#define N_YELLOW   0x0B

#define F_PHRASE   0x50
#define C_PHRASE   0x51

#define U_GREEN    0x52
#define U_BLUE     0x53
#define U_WHITE    0x54
#define U_RED      0x55
#define U_TURQ     0x56
#define U_MAGENTA  0x57
#define U_YELLOW   0x58

#define R_GREEN    0x60
#define R_BLUE     0x61
#define R_WHITE    0x62
#define R_RED      0x63
#define R_TURQ     0x64
#define R_MAGENTA  0x65
#define R_YELLOW   0x66

#define B_GREEN    0x70
#define B_BLUE     0x71
#define B_WHITE    0x72
#define B_RED      0x73
#define B_TURQ     0x74
#define B_MAGENTA  0x75
#define B_YELLOW   0x76

#define H_GREEN    0x80
#define H_BLUE     0x81
#define H_WHITE    0x82
#define H_RED      0x83
#define H_TURQ     0x84
#define H_MAGENTA  0x85
#define H_YELLOW   0x86

#define H_DEFAULT  0x90
#define H_COMMENTS 0x91
#define H_KEYWORDS 0x92
#define H_QUOTED   0x93
#define H_COMPDIR  0x94
#define H_DATA     0x94
#define H_MACRO    0x94
#define H_HEADER   0x94
#define H_SPECIAL  0x95

using namespace std ;


enum RX_INS
{
	RX_NONE,
	RX_DO,
	RX_DO1,
	RX_DO2,
	RX_DO3,
	RX_ELSE,
	RX_END,
	RX_END1,
	RX_END2,
	RX_END3,
	RX_IF,
	RX_INSTR1,
	RX_INSTR2,
	RX_OTHERWISE,
	RX_SELECT,
	RX_THEN,
	RX_WHEN
} ;


class hilight
{
	public:
		string     hl_language  ;
		string     hl_specials  ;
		bool       hl_abend     ;
		int        hl_oBrac1    ;
		int        hl_oBrac2    ;
		int        hl_oIf       ;
		int        hl_oDo       ;
		int        hl_oDO       ;
		int        hl_oDOT      ;
		int        hl_oSEL      ;
		RX_INS     hl_if        ;
		stack<RX_INS> hl_istack ;
		stack<int> hl_DoIf      ;
		bool       hl_oComment  ;
		char       hl_Quote     ;
		bool       hl_oQuote    ;
		bool       hl_continue  ;
		bool       hl_ifLogic   ;
		bool       hl_doLogic   ;
		bool       hl_Paren     ;
		bool       hl_mismatch  ;
		int        hl_lnumS2pos ;
		int        hl_lnumSize1 ;
		int        hl_lnumSize2 ;
		char       hl_defc      ;
		hilight()
		{
			hl_clear() ;
		}
		void hl_clear()
		{
			hl_language  = ""    ;
			hl_abend     = false ;
			hl_oBrac1    = 0     ;
			hl_oBrac2    = 0     ;
			hl_oIf       = 0     ;
			hl_oDo       = 0     ;
			hl_oDO       = 0     ;
			hl_oDOT      = 0     ;
			hl_oSEL      = 0     ;
			hl_oComment  = false ;
			hl_Quote     = ' '   ;
			hl_oQuote    = false ;
			hl_continue  = false ;
			hl_ifLogic   = false ;
			hl_doLogic   = false ;
			hl_Paren     = false ;
			hl_mismatch  = false ;
			hl_lnumS2pos = 0     ;
			hl_lnumSize1 = 0     ;
			hl_lnumSize2 = 0     ;
			hl_if        = RX_NONE ;
			hl_defc      = N_WHITE ;
			while ( !hl_istack.empty() )
			{
				hl_istack.pop() ;
			}
			while ( !hl_DoIf.empty() )
			{
				hl_DoIf.pop() ;
			}
		}
} ;

class keyw
{
	public:
	       int kw_len ;
	       int kw_col ;
} ;

void addASMHilight( hilight&, const string&, string& ) ;
void addBshHilight( hilight&, const string&, string& ) ;
void addCppHilight( hilight&, const string&, string& ) ;
void addRxxHilight( hilight&, const string&, string& ) ;
void addOthHilight( hilight&, const string&, string& ) ;
void addPanHilight( hilight&, const string&, string& ) ;
void addSklHilight( hilight&, const string&, string& ) ;
void addTmlHilight( hilight&, const string&, string& ) ;
void addDefHilight( hilight&, const string&, string& ) ;
void addDfuHilight( hilight&, const string&, string& ) ;
void addDfcHilight( hilight&, const string&, string& ) ;
void addCobHilight( hilight&, const string&, string& ) ;
void addJclHilight( hilight&, const string&, string& ) ;
void addANSHilight( hilight&, const string&, string& ) ;
void addRstHilight( hilight&, const string&, string& ) ;

void addRxxHilight_unwind_if( hilight& ) ;
void addRxxHilight_unwind_end3( hilight& ) ;


map<string, void(*)(hilight&, const string&, string&)> hiRoutine = { { "ANSI",    addANSHilight },
								     { "ASM",     addASMHilight },
								     { "BASH",    addBshHilight },
								     { "COBOL",   addCobHilight },
								     { "CPP",     addCppHilight },
								     { "DEFAULT", addDefHilight },
								     { "DIFFU",   addDfuHilight },
								     { "DIFFC",   addDfcHilight },
								     { "JCL",     addJclHilight },
								     { "OTHER",   addOthHilight },
								     { "RUST",    addRstHilight },
								     { "PANEL",   addPanHilight },
								     { "SKEL",    addSklHilight },
								     { "TOML",    addTmlHilight },
								     { "REXX",    addRxxHilight } } ;
map<string, RX_INS> rexx_if = { { "IF",        RX_IF        },
				{ "THEN",      RX_THEN      },
				{ "ELSE",      RX_ELSE      },
				{ "DO",        RX_DO        },
				{ "END",       RX_END       },
				{ "SELECT",    RX_SELECT    },
				{ "OTHERWISE", RX_OTHERWISE },
				{ "WHEN",      RX_WHEN      } } ;

map<string, keyw> kw_cpp = {
  { "alignas",           { 7,  H_KEYWORDS } },
  { "alignof",           { 7,  H_KEYWORDS } },
  { "and",               { 3,  H_KEYWORDS } },
  { "and_eq",            { 6,  H_KEYWORDS } },
  { "asm",               { 3,  H_KEYWORDS } },
  { "atomic_cancel",     { 13, H_KEYWORDS } },
  { "atomic_commit",     { 13, H_KEYWORDS } },
  { "atomic_noexcept",   { 15, H_KEYWORDS } },
  { "auto",              { 4,  H_KEYWORDS } },
  { "bitand",            { 6,  H_KEYWORDS } },
  { "bitor",             { 5,  H_KEYWORDS } },
  { "bool",              { 4,  H_KEYWORDS } },
  { "break",             { 5,  H_KEYWORDS } },
  { "case",              { 4,  H_KEYWORDS } },
  { "catch",             { 5,  H_KEYWORDS } },
  { "char",              { 4,  H_KEYWORDS } },
  { "char16_t",          { 8,  H_KEYWORDS } },
  { "char32_t",          { 8,  H_KEYWORDS } },
  { "class",             { 5,  H_KEYWORDS } },
  { "compl",             { 5,  H_KEYWORDS } },
  { "concept",           { 7,  H_KEYWORDS } },
  { "const",             { 5,  H_KEYWORDS } },
  { "constexpr",         { 9,  H_KEYWORDS } },
  { "const_cast",        { 10, H_KEYWORDS } },
  { "continue",          { 8,  H_KEYWORDS } },
  { "decltype",          { 8,  H_KEYWORDS } },
  { "default",           { 7,  H_KEYWORDS } },
  { "delete",            { 6,  H_KEYWORDS } },
  { "do",                { 2,  H_KEYWORDS } },
  { "double",            { 6,  H_KEYWORDS } },
  { "dynamic_cast",      { 12, H_KEYWORDS } },
  { "else",              { 4,  H_KEYWORDS } },
  { "enum",              { 4,  H_KEYWORDS } },
  { "explicit",          { 8,  H_KEYWORDS } },
  { "export",            { 6,  H_KEYWORDS } },
  { "extern",            { 6,  H_KEYWORDS } },
  { "false",             { 5,  H_KEYWORDS } },
  { "float",             { 5,  H_KEYWORDS } },
  { "for",               { 3,  H_KEYWORDS } },
  { "friend",            { 6,  H_KEYWORDS } },
  { "goto",              { 4,  H_KEYWORDS } },
  { "if",                { 2,  H_KEYWORDS } },
  { "inline",            { 6,  H_KEYWORDS } },
  { "int",               { 3,  H_KEYWORDS } },
  { "import",            { 6,  H_KEYWORDS } },
  { "long",              { 4,  H_KEYWORDS } },
  { "module",            { 6,  H_KEYWORDS } },
  { "mutable",           { 7,  H_KEYWORDS } },
  { "namespace",         { 9,  H_KEYWORDS } },
  { "new",               { 3,  H_KEYWORDS } },
  { "noexcept",          { 8,  H_KEYWORDS } },
  { "not",               { 3,  H_KEYWORDS } },
  { "not_eq",            { 6,  H_KEYWORDS } },
  { "nullptr",           { 7,  H_KEYWORDS } },
  { "operator",          { 8,  H_KEYWORDS } },
  { "or",                { 2,  H_KEYWORDS } },
  { "or_eq",             { 5,  H_KEYWORDS } },
  { "private",           { 7,  H_KEYWORDS } },
  { "protected",         { 9,  H_KEYWORDS } },
  { "public",            { 6,  H_KEYWORDS } },
  { "register",          { 8,  H_KEYWORDS } },
  { "reinterpret_cast",  { 16, H_KEYWORDS } },
  { "requires",          { 8,  H_KEYWORDS } },
  { "return",            { 6,  H_KEYWORDS } },
  { "short",             { 5,  H_KEYWORDS } },
  { "signed",            { 6,  H_KEYWORDS } },
  { "sizeof",            { 6,  H_KEYWORDS } },
  { "static",            { 6,  H_KEYWORDS } },
  { "static_assert",     { 13, H_KEYWORDS } },
  { "static_cast",       { 11, H_KEYWORDS } },
  { "struct",            { 6,  H_KEYWORDS } },
  { "switch",            { 6,  H_KEYWORDS } },
  { "synchronized",      { 12, H_KEYWORDS } },
  { "template",          { 8,  H_KEYWORDS } },
  { "this",              { 4,  H_KEYWORDS } },
  { "thread_local",      { 12, H_KEYWORDS } },
  { "throw",             { 5,  H_KEYWORDS } },
  { "true",              { 4,  H_KEYWORDS } },
  { "try",               { 3,  H_KEYWORDS } },
  { "typedef",           { 7,  H_KEYWORDS } },
  { "typeid",            { 6,  H_KEYWORDS } },
  { "typename",          { 8,  H_KEYWORDS } },
  { "union",             { 5,  H_KEYWORDS } },
  { "unsigned",          { 8,  H_KEYWORDS } },
  { "using",             { 5,  H_KEYWORDS } },
  { "virtual",           { 7,  H_KEYWORDS } },
  { "void",              { 4,  H_KEYWORDS } },
  { "volatile",          { 8,  H_KEYWORDS } },
  { "wchar_t",           { 7,  H_KEYWORDS } },
  { "while",             { 5,  H_KEYWORDS } },
  { "xor",               { 3,  H_KEYWORDS } },
  { "xor_eq",            { 6,  H_KEYWORDS } } } ;


map<string, keyw> kw_rexx = {
  { "ADDRESS",           { 7,  H_KEYWORDS } },
  { "ARG",               { 3,  H_KEYWORDS } },
  { "BY",                { 2,  H_KEYWORDS } },
  { "CALL",              { 4,  H_KEYWORDS } },
  { "DO",                { 2,  H_KEYWORDS } },
  { "DROP",              { 4,  H_KEYWORDS } },
  { "ELSE",              { 4,  H_KEYWORDS } },
  { "END",               { 3,  H_KEYWORDS } },
  { "ERROR",             { 5,  H_KEYWORDS } },
  { "EXIT",              { 4,  H_KEYWORDS } },
  { "EXPOSE",            { 6,  H_KEYWORDS } },
  { "FAILURE",           { 7,  H_KEYWORDS } },
  { "FOR",               { 3,  H_KEYWORDS } },
  { "FOREVER",           { 7,  H_KEYWORDS } },
  { "FORWARD",           { 7,  H_KEYWORDS } },
  { "GUARD",             { 5,  H_KEYWORDS } },
  { "HALT",              { 4,  H_KEYWORDS } },
  { "IF",                { 2,  H_KEYWORDS } },
  { "INTERPRET",         { 9,  H_KEYWORDS } },
  { "ITERATE",           { 7,  H_KEYWORDS } },
  { "LEAVE",             { 5,  H_KEYWORDS } },
  { "LOOP",              { 4,  H_KEYWORDS } },
  { "NOP",               { 3,  H_KEYWORDS } },
  { "NOVALUE",           { 7,  H_KEYWORDS } },
  { "NUMERIC",           { 7,  H_KEYWORDS } },
  { "OFF",               { 3,  H_KEYWORDS } },
  { "ON",                { 2,  H_KEYWORDS } },
  { "OPTIONS",           { 7,  H_KEYWORDS } },
  { "OTHERWISE",         { 9,  H_KEYWORDS } },
  { "PARSE",             { 5,  H_KEYWORDS } },
  { "PROCEDURE",         { 9,  H_KEYWORDS } },
  { "PULL",              { 4,  H_KEYWORDS } },
  { "PUSH",              { 4,  H_KEYWORDS } },
  { "QUEUE",             { 5,  H_KEYWORDS } },
  { "RAISE",             { 5,  H_KEYWORDS } },
  { "REPLY",             { 5,  H_KEYWORDS } },
  { "RETURN",            { 6,  H_KEYWORDS } },
  { "SAY",               { 3,  H_KEYWORDS } },
  { "SELECT",            { 6,  H_KEYWORDS } },
  { "SIGNAL",            { 6,  H_KEYWORDS } },
  { "THEN",              { 4,  H_KEYWORDS } },
  { "TO",                { 2,  H_KEYWORDS } },
  { "TRACE",             { 5,  H_KEYWORDS } },
  { "UNTIL",             { 5,  H_KEYWORDS } },
  { "USE",               { 3,  H_KEYWORDS } },
  { "WHEN",              { 4,  H_KEYWORDS } },
  { "WHILE",             { 5,  H_KEYWORDS } },
  { "WITH",              { 4,  H_KEYWORDS } },
  { "ABBREV",            { 6,  H_KEYWORDS } },
  { "ABS",               { 3,  H_KEYWORDS } },
  { "B2X",               { 3,  H_KEYWORDS } },
  { "BITAND",            { 6,  H_KEYWORDS } },
  { "BITOR",             { 5,  H_KEYWORDS } },
  { "BITXOR",            { 6,  H_KEYWORDS } },
  { "C2D",               { 3,  H_KEYWORDS } },
  { "C2X",               { 3,  H_KEYWORDS } },
  { "CENTER",            { 6,  H_KEYWORDS } },
  { "CENTRE",            { 6,  H_KEYWORDS } },
  { "CHANGESTR",         { 9,  H_KEYWORDS } },
  { "CHARIN",            { 6,  H_KEYWORDS } },
  { "CHAROUT",           { 7,  H_KEYWORDS } },
  { "CHARS",             { 5,  H_KEYWORDS } },
  { "COMPARE",           { 7,  H_KEYWORDS } },
  { "CONDITION",         { 9,  H_KEYWORDS } },
  { "COPIES",            { 6,  H_KEYWORDS } },
  { "COUNTSTR",          { 8,  H_KEYWORDS } },
  { "D2C",               { 3,  H_KEYWORDS } },
  { "D2X",               { 3,  H_KEYWORDS } },
  { "DATATYPE",          { 8,  H_KEYWORDS } },
  { "DATE",              { 4,  H_KEYWORDS } },
  { "DELSTR",            { 6,  H_KEYWORDS } },
  { "DELWORD",           { 7,  H_KEYWORDS } },
  { "DIGITS",            { 6,  H_KEYWORDS } },
  { "ERRORTEXT",         { 9,  H_KEYWORDS } },
  { "EXTERNALS",         { 9,  H_KEYWORDS } },
  { "FIND",              { 4,  H_KEYWORDS } },
  { "FORM",              { 4,  H_KEYWORDS } },
  { "FORMAT",            { 6,  H_KEYWORDS } },
  { "FUZZ",              { 4,  H_KEYWORDS } },
  { "INDEX",             { 5,  H_KEYWORDS } },
  { "INSERT",            { 6,  H_KEYWORDS } },
  { "JUSTIFY",           { 7,  H_KEYWORDS } },
  { "LASTPOS",           { 7,  H_KEYWORDS } },
  { "LEFT",              { 4,  H_KEYWORDS } },
  { "LENGTH",            { 6,  H_KEYWORDS } },
  { "LINEIN",            { 6,  H_KEYWORDS } },
  { "LINEOUT",           { 7,  H_KEYWORDS } },
  { "LINES",             { 5,  H_KEYWORDS } },
  { "LINESIZE",          { 8,  H_KEYWORDS } },
  { "MAX",               { 3,  H_KEYWORDS } },
  { "MIN",               { 3,  H_KEYWORDS } },
  { "OVERLAY",           { 7,  H_KEYWORDS } },
  { "POS",               { 3,  H_KEYWORDS } },
  { "QUALIFY",           { 7,  H_KEYWORDS } },
  { "QUEUED",            { 6,  H_KEYWORDS } },
  { "RANDOM",            { 6,  H_KEYWORDS } },
  { "REVERSE",           { 7,  H_KEYWORDS } },
  { "RIGHT",             { 5,  H_KEYWORDS } },
  { "SIGN",              { 4,  H_KEYWORDS } },
  { "SOURCELINE",        { 10, H_KEYWORDS } },
  { "SPACE",             { 5,  H_KEYWORDS } },
  { "STREAM",            { 6,  H_KEYWORDS } },
  { "STRIP",             { 5,  H_KEYWORDS } },
  { "SUBSTR",            { 6,  H_KEYWORDS } },
  { "SUBWORD",           { 7,  H_KEYWORDS } },
  { "SYMBOL",            { 6,  H_KEYWORDS } },
  { "TIME",              { 4,  H_KEYWORDS } },
  { "TRANSLATE",         { 9,  H_KEYWORDS } },
  { "TRUNC",             { 5,  H_KEYWORDS } },
  { "USERID",            { 6,  H_KEYWORDS } },
  { "VALUE",             { 5,  H_KEYWORDS } },
  { "VERIFY",            { 6,  H_KEYWORDS } },
  { "WORD",              { 4,  H_KEYWORDS } },
  { "WORDINDEX",         { 9,  H_KEYWORDS } },
  { "WORDLENGTH",        { 10, H_KEYWORDS } },
  { "WORDPOS",           { 7,  H_KEYWORDS } },
  { "WORDS",             { 5,  H_KEYWORDS } },
  { "X2B",               { 3,  H_KEYWORDS } },
  { "X2C",               { 3,  H_KEYWORDS } },
  { "X2D",               { 3,  H_KEYWORDS } },
  { "XRANGE",            { 6,  H_KEYWORDS } } } ;


map<string, keyw> kw_panel = {
  { ")PANEL",          { 6,  H_KEYWORDS } },
  { ")ABC",            { 4,  H_KEYWORDS } },
  { ")ABCINIT",        { 8,  H_KEYWORDS } },
  { ")ABCPROC",        { 8,  H_KEYWORDS } },
  { ")ATTR",           { 5,  H_KEYWORDS } },
  { ")INCLUDE",        { 8,  H_KEYWORDS } },
  { ")BODY",           { 5,  H_KEYWORDS } },
  { ")AREA",           { 5,  H_KEYWORDS } },
  { ")INIT",           { 5,  H_KEYWORDS } },
  { ")REINIT",         { 7,  H_KEYWORDS } },
  { ")PROC",           { 5,  H_KEYWORDS } },
  { ")FIELD",          { 6,  H_KEYWORDS } },
  { ")HELP",           { 5,  H_KEYWORDS } },
  { ")PNTS",           { 5,  H_KEYWORDS } },
  { ")END",            { 4,  H_KEYWORDS } },
  { ")COMMENT",        { 8,  H_KEYWORDS } },
  { ")ENDCOMMENT",     { 11, H_KEYWORDS } },
  { "PDC",             { 3,  H_KEYWORDS } },
  { "ACTION",          { 6,  H_KEYWORDS } },
  { "IF",              { 2,  H_KEYWORDS } },
  { "ELSE",            { 4,  H_KEYWORDS } },
  { "OR",              { 2,  H_KEYWORDS } },
  { "AND",             { 3,  H_KEYWORDS } },
  { "VGET",            { 4,  H_KEYWORDS } },
  { "VPUT",            { 4,  H_KEYWORDS } },
  { "VER",             { 3,  H_KEYWORDS } },
  { "EQ",              { 2,  H_KEYWORDS } },
  { "NE",              { 2,  H_KEYWORDS } },
  { "GT",              { 2,  H_KEYWORDS } },
  { "LT",              { 2,  H_KEYWORDS } },
  { "GE",              { 2,  H_KEYWORDS } },
  { "NL",              { 2,  H_KEYWORDS } },
  { "LE",              { 2,  H_KEYWORDS } },
  { "NG",              { 2,  H_KEYWORDS } },
  { "EXISTS",          { 6,  H_KEYWORDS } },
  { "FILE",            { 4,  H_KEYWORDS } },
  { "DIR",             { 3,  H_KEYWORDS } },
  { "LENGTH",          { 6,  H_KEYWORDS } },
  { "LENGTH",          { 6,  H_KEYWORDS } },
  { "TRANS",           { 5,  H_KEYWORDS } },
  { "TRUNC",           { 5,  H_KEYWORDS } },
  { "REVERSE",         { 7,  H_KEYWORDS } },
  { "WORDS",           { 5,  H_KEYWORDS } },
  { "UPPER",           { 5,  H_KEYWORDS } } } ;


map<string, keyw> kw_other = {
  { "BEGIN",     { 5, H_KEYWORDS } },
  { "BY",        { 2, H_KEYWORDS } },
  { "CALL",      { 4, H_KEYWORDS } },
  { "DCL",       { 3, H_KEYWORDS } },
  { "DECLARE",   { 7, H_KEYWORDS } },
  { "DO",        { 2, H_KEYWORDS } },
  { "ELSE",      { 4, H_KEYWORDS } },
  { "END",       { 3, H_KEYWORDS } },
  { "ENTRY",     { 5, H_KEYWORDS } },
  { "FOREVER",   { 7, H_KEYWORDS } },
  { "GOTO",      { 4, H_KEYWORDS } },
  { "IF",        { 2, H_KEYWORDS } },
  { "ITERATE",   { 7, H_KEYWORDS } },
  { "LEAVE",     { 5, H_KEYWORDS } },
  { "OTHER",     { 5, H_KEYWORDS } },
  { "OTHERWISE", { 9, H_KEYWORDS } },
  { "PROC",      { 4, H_KEYWORDS } },
  { "PROCEDURE", { 9, H_KEYWORDS } },
  { "RETURN",    { 6, H_KEYWORDS } },
  { "SELECT",    { 6, H_KEYWORDS } },
  { "THEN",      { 4, H_KEYWORDS } },
  { "TO",        { 2, H_KEYWORDS } },
  { "UNTIL",     { 5, H_KEYWORDS } },
  { "WHEN",      { 4, H_KEYWORDS } },
  { "WHILE",     { 5, H_KEYWORDS } } } ;


map<string, keyw> kw_cobol = {
  { "ACCEPT",               { 6,  H_KEYWORDS } },
  { "ACCESS",               { 6,  H_KEYWORDS } },
  { "ADD",                  { 3,  H_KEYWORDS } },
  { "ADDRESS",              { 7,  H_KEYWORDS } },
  { "ADVANCING",            { 9,  H_KEYWORDS } },
  { "AFTER",                { 5,  H_KEYWORDS } },
  { "ALL",                  { 3,  H_KEYWORDS } },
  { "ALPHABET",             { 8,  H_KEYWORDS } },
  { "ALPHABETIC",           { 10, H_KEYWORDS } },
  { "ALPHABETIC-LOWER",     { 16, H_KEYWORDS } },
  { "ALPHABETIC-UPPER",     { 16, H_KEYWORDS } },
  { "ALPHANUMERIC",         { 12, H_KEYWORDS } },
  { "ALPHANUMERIC-EDITED",  { 19, H_KEYWORDS } },
  { "ALSO",                 { 4,  H_KEYWORDS } },
  { "ALTER",                { 5,  H_KEYWORDS } },
  { "ALTERNATE",            { 9,  H_KEYWORDS } },
  { "AND",                  { 3,  H_KEYWORDS } },
  { "ANY",                  { 3,  H_KEYWORDS } },
  { "APPLY",                { 5,  H_KEYWORDS } },
  { "ARE",                  { 3,  H_KEYWORDS } },
  { "AREA",                 { 4,  H_KEYWORDS } },
  { "AREAS",                { 5,  H_KEYWORDS } },
  { "ASCENDING",            { 9,  H_KEYWORDS } },
  { "ASSIGN",               { 6,  H_KEYWORDS } },
  { "AT",                   { 2,  H_KEYWORDS } },
  { "AUTHOR",               { 6,  H_KEYWORDS } },
  { "BASIS",                { 5,  H_COMPDIR } },
  { "BEFORE",               { 6,  H_KEYWORDS } },
  { "BEGINNING",            { 9,  H_KEYWORDS } },
  { "BINARY",               { 6,  H_KEYWORDS } },
  { "BLANK",                { 5,  H_KEYWORDS } },
  { "BLOCK",                { 5,  H_KEYWORDS } },
  { "BOTTOM",               { 6,  H_KEYWORDS } },
  { "BY",                   { 2,  H_KEYWORDS } },
  { "CALL",                 { 4,  H_KEYWORDS } },
  { "CANCEL",               { 6,  H_KEYWORDS } },
  { "CBL",                  { 3,  H_COMPDIR } },
  { "CD",                   { 2,  H_KEYWORDS } },
  { "CF",                   { 2,  H_KEYWORDS } },
  { "CH",                   { 2,  H_KEYWORDS } },
  { "CHARACTER",            { 9,  H_KEYWORDS } },
  { "CHARACTERS",           { 10, H_KEYWORDS } },
  { "CLASS",                { 5,  H_KEYWORDS } },
  { "CLASS-ID",             { 8,  H_KEYWORDS } },
  { "CLOCK-UNITS",          { 11, H_KEYWORDS } },
  { "CLOSE",                { 5,  H_KEYWORDS } },
  { "COBOL",                { 5,  H_KEYWORDS } },
  { "CODE",                 { 4,  H_KEYWORDS } },
  { "CODE-SET",             { 8,  H_KEYWORDS } },
  { "COLLATING",            { 9,  H_KEYWORDS } },
  { "COLUMN",               { 6,  H_KEYWORDS } },
  { "COM-REG",              { 7,  H_KEYWORDS } },
  { "COMMA",                { 5,  H_KEYWORDS } },
  { "COMMON",               { 6,  H_KEYWORDS } },
  { "COMMUNICATION",        { 13, H_KEYWORDS } },
  { "COMP",                 { 4,  H_KEYWORDS } },
  { "COMP-1",               { 6,  H_KEYWORDS } },
  { "COMP-2",               { 6,  H_KEYWORDS } },
  { "COMP-3",               { 6,  H_KEYWORDS } },
  { "COMP-4",               { 6,  H_KEYWORDS } },
  { "COMP-5",               { 6,  H_KEYWORDS } },
  { "COMPUTATIONAL",        { 13, H_KEYWORDS } },
  { "COMPUTATIONAL-1",      { 15, H_KEYWORDS } },
  { "COMPUTATIONAL-2",      { 15, H_KEYWORDS } },
  { "COMPUTATIONAL-3",      { 15, H_KEYWORDS } },
  { "COMPUTATIONAL-4",      { 15, H_KEYWORDS } },
  { "COMPUTATIONAL-5",      { 15, H_KEYWORDS } },
  { "COMPUTE",              { 7,  H_KEYWORDS } },
  { "CONFIGURATION",        { 13, H_KEYWORDS } },
  { "CONTAINS",             { 8,  H_KEYWORDS } },
  { "CONTENT",              { 7,  H_KEYWORDS } },
  { "CONTINUE",             { 8,  H_KEYWORDS } },
  { "CONTROL",              { 7,  H_COMPDIR } },
  { "CONTROLS",             { 8,  H_KEYWORDS } },
  { "CONVERTING",           { 10, H_KEYWORDS } },
  { "COPY",                 { 4,  H_COMPDIR } },
  { "CORR",                 { 4,  H_KEYWORDS } },
  { "CORRESPONDING",        { 13, H_KEYWORDS } },
  { "COUNT",                { 5,  H_KEYWORDS } },
  { "CURRENCY",             { 8,  H_KEYWORDS } },
  { "DATA",                 { 4,  H_KEYWORDS } },
  { "DATE-COMPILED",        { 13, H_KEYWORDS } },
  { "DATE-WRITTEN",         { 12, H_KEYWORDS } },
  { "DAY",                  { 3,  H_KEYWORDS } },
  { "DAY-OF-WEEK",          { 11, H_KEYWORDS } },
  { "DBCS",                 { 4,  H_KEYWORDS } },
  { "DE",                   { 2,  H_KEYWORDS } },
  { "DEBUG-CONTENTS",       { 14, H_KEYWORDS } },
  { "DEBUG-ITEM",           { 10, H_KEYWORDS } },
  { "DEBUG-LINE",           { 10, H_KEYWORDS } },
  { "DEBUG-NAME",           { 10, H_KEYWORDS } },
  { "DEBUG-SUB-1",          { 11, H_KEYWORDS } },
  { "DEBUG-SUB-2",          { 11, H_KEYWORDS } },
  { "DEBUG-SUB-3",          { 11, H_KEYWORDS } },
  { "DEBUGGING",            { 9,  H_KEYWORDS } },
  { "DECIMAL-POINT",        { 13, H_KEYWORDS } },
  { "DECLARATIVES",         { 12, H_KEYWORDS } },
  { "DELETE",               { 6,  H_COMPDIR } },
  { "DELIMITED",            { 9,  H_KEYWORDS } },
  { "DELIMITER",            { 9,  H_KEYWORDS } },
  { "DEPENDING",            { 9,  H_KEYWORDS } },
  { "DESCENDING",           { 10, H_KEYWORDS } },
  { "DESTINATION",          { 11, H_KEYWORDS } },
  { "DETAIL",               { 6,  H_KEYWORDS } },
  { "DISPLAY",              { 7,  H_KEYWORDS } },
  { "DISPLAY-1",            { 9,  H_KEYWORDS } },
  { "DIVIDE",               { 6,  H_KEYWORDS } },
  { "DIVISION",             { 8,  H_KEYWORDS } },
  { "DOWN",                 { 4,  H_KEYWORDS } },
  { "DUPLICATES",           { 10, H_KEYWORDS } },
  { "DYNAMIC",              { 7,  H_KEYWORDS } },
  { "EGCS",                 { 4,  H_KEYWORDS } },
  { "EGI",                  { 3,  H_KEYWORDS } },
  { "EJECT",                { 5,  H_COMPDIR } },
  { "ELSE",                 { 4,  H_KEYWORDS } },
  { "EMI",                  { 3,  H_KEYWORDS } },
  { "ENABLE",               { 6,  H_KEYWORDS } },
  { "END",                  { 3,  H_KEYWORDS } },
  { "END-ADD",              { 7,  H_KEYWORDS } },
  { "END-CALL",             { 8,  H_KEYWORDS } },
  { "END-COMPUTE",          { 11, H_KEYWORDS } },
  { "END-DELETE",           { 10, H_KEYWORDS } },
  { "END-DIVIDE",           { 10, H_KEYWORDS } },
  { "END-EVALUATE",         { 12, H_KEYWORDS } },
  { "END-IF",               { 6,  H_KEYWORDS } },
  { "END-INVOKE",           { 10, H_KEYWORDS } },
  { "END-MULTIPLY",         { 12, H_KEYWORDS } },
  { "END-OF-PAGE",          { 11, H_KEYWORDS } },
  { "END-PERFORM",          { 11, H_KEYWORDS } },
  { "END-READ",             { 8,  H_KEYWORDS } },
  { "END-RECEIVE",          { 11, H_KEYWORDS } },
  { "END-RETURN",           { 10, H_KEYWORDS } },
  { "END-REWRITE",          { 11, H_KEYWORDS } },
  { "END-SEARCH",           { 10, H_KEYWORDS } },
  { "END-START",            { 9,  H_KEYWORDS } },
  { "END-STRING",           { 10, H_KEYWORDS } },
  { "END-SUBTRACT",         { 12, H_KEYWORDS } },
  { "END-UNSTRING",         { 12, H_KEYWORDS } },
  { "END-WRITE",            { 9,  H_KEYWORDS } },
  { "ENDING",               { 6,  H_KEYWORDS } },
  { "ENTER",                { 5,  H_COMPDIR } },
  { "ENTRY",                { 5,  H_KEYWORDS } },
  { "ENVIRONMENT",          { 11, H_KEYWORDS } },
  { "EOP",                  { 3,  H_KEYWORDS } },
  { "EQUAL",                { 5,  H_KEYWORDS } },
  { "ERROR",                { 5,  H_KEYWORDS } },
  { "ESI",                  { 3,  H_KEYWORDS } },
  { "EVALUATE",             { 8,  H_KEYWORDS } },
  { "EVERY",                { 5,  H_KEYWORDS } },
  { "EXCEPTION",            { 9,  H_KEYWORDS } },
  { "EXIT",                 { 4,  H_KEYWORDS } },
  { "EXTEND",               { 6,  H_KEYWORDS } },
  { "EXTERNAL",             { 8,  H_KEYWORDS } },
  { "FALSE",                { 5,  H_KEYWORDS } },
  { "FD",                   { 2,  H_KEYWORDS } },
  { "FILE",                 { 4,  H_KEYWORDS } },
  { "FILE-CONTROL",         { 12, H_KEYWORDS } },
  { "FILLER",               { 6,  H_KEYWORDS } },
  { "FINAL",                { 5,  H_KEYWORDS } },
  { "FIRST",                { 5,  H_KEYWORDS } },
  { "FOOTING",              { 7,  H_KEYWORDS } },
  { "FOR",                  { 3,  H_KEYWORDS } },
  { "FROM",                 { 4,  H_KEYWORDS } },
  { "FUNCTION",             { 8,  H_KEYWORDS } },
  { "GENERATE",             { 8,  H_KEYWORDS } },
  { "GIVING",               { 6,  H_KEYWORDS } },
  { "GLOBAL",               { 6,  H_KEYWORDS } },
  { "GO",                   { 2,  H_KEYWORDS } },
  { "GOBACK",               { 6,  H_KEYWORDS } },
  { "GREATER",              { 7,  H_KEYWORDS } },
  { "GROUP",                { 5,  H_KEYWORDS } },
  { "HEADING",              { 7,  H_KEYWORDS } },
  { "HIGH-VALUE",           { 10, H_KEYWORDS } },
  { "HIGH-VALUES",          { 11, H_KEYWORDS } },
  { "I-O",                  { 3,  H_KEYWORDS } },
  { "I-O-CONTROL",          { 11, H_KEYWORDS } },
  { "ID",                   { 2,  H_KEYWORDS } },
  { "IDENTIFICATION",       { 14, H_KEYWORDS } },
  { "IF",                   { 2,  H_KEYWORDS } },
  { "IN",                   { 2,  H_KEYWORDS } },
  { "INDEX",                { 5,  H_KEYWORDS } },
  { "INDEXED",              { 7,  H_KEYWORDS } },
  { "INDICATE",             { 8,  H_KEYWORDS } },
  { "INHERITS",             { 8,  H_KEYWORDS } },
  { "INITIAL",              { 7,  H_KEYWORDS } },
  { "INITIALIZE",           { 10, H_KEYWORDS } },
  { "INITIATE",             { 8,  H_KEYWORDS } },
  { "INPUT",                { 5,  H_KEYWORDS } },
  { "INPUT-OUTPUT",         { 12, H_KEYWORDS } },
  { "INSERT",               { 6,  H_COMPDIR } },
  { "INSPECT",              { 7,  H_KEYWORDS } },
  { "INSTALLATION",         { 12, H_KEYWORDS } },
  { "INTO",                 { 4,  H_KEYWORDS } },
  { "INVALID",              { 7,  H_KEYWORDS } },
  { "INVOKE",               { 6,  H_KEYWORDS } },
  { "IS",                   { 2,  H_KEYWORDS } },
  { "JUST",                 { 4,  H_KEYWORDS } },
  { "JUSTIFIED",            { 9,  H_KEYWORDS } },
  { "KANJI",                { 5,  H_KEYWORDS } },
  { "KEY",                  { 3,  H_KEYWORDS } },
  { "LABEL",                { 5,  H_KEYWORDS } },
  { "LAST",                 { 4,  H_KEYWORDS } },
  { "LEADING",              { 7,  H_KEYWORDS } },
  { "LEFT",                 { 4,  H_KEYWORDS } },
  { "LENGTH",               { 6,  H_KEYWORDS } },
  { "LESS",                 { 4,  H_KEYWORDS } },
  { "LIMIT",                { 5,  H_KEYWORDS } },
  { "LIMITS",               { 6,  H_KEYWORDS } },
  { "LINAGE",               { 6,  H_KEYWORDS } },
  { "LINAGE-COUNTER",       { 14, H_KEYWORDS } },
  { "LINE",                 { 4,  H_KEYWORDS } },
  { "LINE-COUNTER",         { 12, H_KEYWORDS } },
  { "LINES",                { 5,  H_KEYWORDS } },
  { "LINKAGE",              { 7,  H_KEYWORDS } },
  { "LOCAL-STORAGE",        { 13, H_KEYWORDS } },
  { "LOCK",                 { 4,  H_KEYWORDS } },
  { "LOW-VALUE",            { 9,  H_KEYWORDS } },
  { "LOW-VALUES",           { 10, H_KEYWORDS } },
  { "MEMORY",               { 6,  H_KEYWORDS } },
  { "MERGE",                { 5,  H_KEYWORDS } },
  { "MESSAGE",              { 7,  H_KEYWORDS } },
  { "METACLASS",            { 9,  H_KEYWORDS } },
  { "METHOD",               { 6,  H_KEYWORDS } },
  { "METHOD-ID",            { 9,  H_KEYWORDS } },
  { "MODE",                 { 4,  H_KEYWORDS } },
  { "MODULES",              { 7,  H_KEYWORDS } },
  { "MORE-LABELS",          { 11, H_KEYWORDS } },
  { "MOVE",                 { 4,  H_KEYWORDS } },
  { "MULTIPLE",             { 8,  H_KEYWORDS } },
  { "MULTIPLY",             { 8,  H_KEYWORDS } },
  { "NATIVE",               { 6,  H_KEYWORDS } },
  { "NATIVE_BINARY",        { 13, H_KEYWORDS } },
  { "NEGATIVE",             { 8,  H_KEYWORDS } },
  { "NEXT",                 { 4,  H_KEYWORDS } },
  { "NO",                   { 2,  H_KEYWORDS } },
  { "NOT",                  { 3,  H_KEYWORDS } },
  { "NULL",                 { 4,  H_KEYWORDS } },
  { "NULLS",                { 5,  H_KEYWORDS } },
  { "NUMBER",               { 6,  H_KEYWORDS } },
  { "NUMERIC",              { 7,  H_KEYWORDS } },
  { "NUMERIC-EDITED",       { 14, H_KEYWORDS } },
  { "OBJECT",               { 6,  H_KEYWORDS } },
  { "OBJECT-COMPUTER",      { 15, H_KEYWORDS } },
  { "OCCURS",               { 6,  H_KEYWORDS } },
  { "OF",                   { 2,  H_KEYWORDS } },
  { "OFF",                  { 3,  H_KEYWORDS } },
  { "OMITTED",              { 7,  H_KEYWORDS } },
  { "ON",                   { 2,  H_KEYWORDS } },
  { "OPEN",                 { 4,  H_KEYWORDS } },
  { "OPTIONAL",             { 8,  H_KEYWORDS } },
  { "OR",                   { 2,  H_KEYWORDS } },
  { "ORDER",                { 5,  H_KEYWORDS } },
  { "ORGANIZATION",         { 12, H_KEYWORDS } },
  { "OTHER",                { 5,  H_KEYWORDS } },
  { "OUTPUT",               { 6,  H_KEYWORDS } },
  { "OVERFLOW",             { 8,  H_KEYWORDS } },
  { "OVERRIDE",             { 8,  H_KEYWORDS } },
  { "PACKED-DECIMAL",       { 14, H_KEYWORDS } },
  { "PADDING",              { 7,  H_KEYWORDS } },
  { "PAGE",                 { 4,  H_KEYWORDS } },
  { "PAGE-COUNTER",         { 12, H_KEYWORDS } },
  { "PASSWORD",             { 8,  H_KEYWORDS } },
  { "PERFORM",              { 7,  H_KEYWORDS } },
  { "PF",                   { 2,  H_KEYWORDS } },
  { "PH",                   { 2,  H_KEYWORDS } },
  { "PIC",                  { 3,  H_KEYWORDS } },
  { "PICTURE",              { 7,  H_KEYWORDS } },
  { "PLUS",                 { 4,  H_KEYWORDS } },
  { "POINTER",              { 7,  H_KEYWORDS } },
  { "POSITION",             { 8,  H_KEYWORDS } },
  { "POSITIVE",             { 8,  H_KEYWORDS } },
  { "PRINTING",             { 8,  H_KEYWORDS } },
  { "PROCEDURE",            { 9,  H_KEYWORDS } },
  { "PROCEDURE-POINTER",    { 17, H_KEYWORDS } },
  { "PROCEDURES",           { 10, H_KEYWORDS } },
  { "PROCEED",              { 7,  H_KEYWORDS } },
  { "PROCESS",              { 7,  H_COMPDIR } },
  { "PROCESSING",           { 10, H_KEYWORDS } },
  { "PROGRAM",              { 7,  H_KEYWORDS } },
  { "PROGRAM-ID",           { 10, H_KEYWORDS } },
  { "PURGE",                { 5,  H_KEYWORDS } },
  { "QUEUE",                { 5,  H_KEYWORDS } },
  { "QUOTE",                { 5,  H_KEYWORDS } },
  { "QUOTES",               { 6,  H_KEYWORDS } },
  { "RANDOM",               { 6,  H_KEYWORDS } },
  { "RD",                   { 2,  H_KEYWORDS } },
  { "READ",                 { 4,  H_KEYWORDS } },
  { "READY",                { 5,  H_COMPDIR } },
  { "RECEIVE",              { 7,  H_KEYWORDS } },
  { "RECORD",               { 6,  H_KEYWORDS } },
  { "RECORDING",            { 9,  H_KEYWORDS } },
  { "RECORDS",              { 7,  H_KEYWORDS } },
  { "RECURSIVE",            { 9,  H_KEYWORDS } },
  { "REDEFINES",            { 9,  H_KEYWORDS } },
  { "REEL",                 { 4,  H_KEYWORDS } },
  { "REFERENCE",            { 9,  H_KEYWORDS } },
  { "REFERENCES",           { 10, H_KEYWORDS } },
  { "RELATIVE",             { 8,  H_KEYWORDS } },
  { "RELEASE",              { 7,  H_KEYWORDS } },
  { "RELOAD",               { 6,  H_KEYWORDS } },
  { "REMAINDER",            { 9,  H_KEYWORDS } },
  { "REMOVAL",              { 7,  H_KEYWORDS } },
  { "RENAMES",              { 7,  H_KEYWORDS } },
  { "REPLACE",              { 7,  H_COMPDIR } },
  { "REPLACING",            { 9,  H_KEYWORDS } },
  { "REPORT",               { 6,  H_KEYWORDS } },
  { "REPORTING",            { 9,  H_KEYWORDS } },
  { "REPORTS",              { 7,  H_KEYWORDS } },
  { "REPOSITORY",           { 10, H_KEYWORDS } },
  { "RERUN",                { 5,  H_KEYWORDS } },
  { "RESERVE",              { 7,  H_KEYWORDS } },
  { "RESET",                { 5,  H_COMPDIR } },
  { "RETURN",               { 6,  H_KEYWORDS } },
  { "RETURN-CODE",          { 11, H_KEYWORDS } },
  { "RETURNING",            { 9,  H_KEYWORDS } },
  { "REVERSED",             { 8,  H_KEYWORDS } },
  { "REWIND",               { 6,  H_KEYWORDS } },
  { "REWRITE",              { 7,  H_KEYWORDS } },
  { "RF",                   { 2,  H_KEYWORDS } },
  { "RH",                   { 2,  H_KEYWORDS } },
  { "RIGHT",                { 5,  H_KEYWORDS } },
  { "ROUNDED",              { 7,  H_KEYWORDS } },
  { "RUN",                  { 3,  H_KEYWORDS } },
  { "SAME",                 { 4,  H_KEYWORDS } },
  { "SD",                   { 2,  H_KEYWORDS } },
  { "SEARCH",               { 6,  H_KEYWORDS } },
  { "SECTION",              { 7,  H_KEYWORDS } },
  { "SECURITY",             { 8,  H_KEYWORDS } },
  { "SEGMENT",              { 7,  H_KEYWORDS } },
  { "SEGMENT-LIMIT",        { 13, H_KEYWORDS } },
  { "SELECT",               { 6,  H_KEYWORDS } },
  { "SELF",                 { 4,  H_KEYWORDS } },
  { "SEND",                 { 4,  H_KEYWORDS } },
  { "SENTENCE",             { 8,  H_KEYWORDS } },
  { "SEPARATE",             { 8,  H_KEYWORDS } },
  { "SEQUENCE",             { 8,  H_KEYWORDS } },
  { "SEQUENTIAL",           { 10, H_KEYWORDS } },
  { "SERVICE",              { 7,  H_COMPDIR } },
  { "SET",                  { 3,  H_KEYWORDS } },
  { "SHIFT-IN",             { 8,  H_KEYWORDS } },
  { "SHIFT-OUT",            { 9,  H_KEYWORDS } },
  { "SIGN",                 { 4,  H_KEYWORDS } },
  { "SIZE",                 { 4,  H_KEYWORDS } },
  { "SKIP",                 { 4,  H_COMPDIR } },
  { "SKIP1",                { 5,  H_COMPDIR } },
  { "SKIP2",                { 5,  H_COMPDIR } },
  { "SKIP3",                { 5,  H_COMPDIR } },
  { "SORT",                 { 4,  H_KEYWORDS } },
  { "SORT-CONTROL",         { 12, H_KEYWORDS } },
  { "SORT-CORE-SIZE",       { 14, H_KEYWORDS } },
  { "SORT-FILE-SIZE",       { 14, H_KEYWORDS } },
  { "SORT-MERGE",           { 10, H_KEYWORDS } },
  { "SORT-MESSAGE",         { 12, H_KEYWORDS } },
  { "SORT-MODE-SIZE",       { 14, H_KEYWORDS } },
  { "SORT-RETURN",          { 11, H_KEYWORDS } },
  { "SOURCE",               { 6,  H_KEYWORDS } },
  { "SOURCE-COMPUTER",      { 15, H_KEYWORDS } },
  { "SPACE",                { 5,  H_KEYWORDS } },
  { "SPACES",               { 6,  H_KEYWORDS } },
  { "SPECIAL-NAMES",        { 13, H_KEYWORDS } },
  { "STANDARD",             { 8,  H_KEYWORDS } },
  { "STANDARD-1",           { 10, H_KEYWORDS } },
  { "STANDARD-2",           { 10, H_KEYWORDS } },
  { "START",                { 5,  H_KEYWORDS } },
  { "STATUS",               { 6,  H_KEYWORDS } },
  { "STOP",                 { 4,  H_KEYWORDS } },
  { "STRING",               { 6,  H_KEYWORDS } },
  { "SUB-QUEUE-1",          { 11, H_KEYWORDS } },
  { "SUB-QUEUE-2",          { 11, H_KEYWORDS } },
  { "SUB-QUEUE-3",          { 11, H_KEYWORDS } },
  { "SUBTRACT",             { 8,  H_KEYWORDS } },
  { "SUM",                  { 3,  H_KEYWORDS } },
  { "SUPER",                { 5,  H_KEYWORDS } },
  { "SUPPRESS",             { 8,  H_KEYWORDS } },
  { "SYMBOLIC",             { 8,  H_KEYWORDS } },
  { "SYNC",                 { 4,  H_KEYWORDS } },
  { "SYNCHRONIZED",         { 12, H_KEYWORDS } },
  { "TABLE",                { 5,  H_KEYWORDS } },
  { "TALLY",                { 5,  H_KEYWORDS } },
  { "TALLYING",             { 8,  H_KEYWORDS } },
  { "TAPE",                 { 4,  H_KEYWORDS } },
  { "TERMINAL",             { 8,  H_KEYWORDS } },
  { "TERMINATE",            { 9,  H_KEYWORDS } },
  { "TEST",                 { 4,  H_KEYWORDS } },
  { "TEXT",                 { 4,  H_KEYWORDS } },
  { "THAN",                 { 4,  H_KEYWORDS } },
  { "THEN",                 { 4,  H_KEYWORDS } },
  { "THROUGH",              { 7,  H_KEYWORDS } },
  { "THRU",                 { 4,  H_KEYWORDS } },
  { "TIME",                 { 4,  H_KEYWORDS } },
  { "TIMES",                { 5,  H_KEYWORDS } },
  { "TITLE",                { 5,  H_COMPDIR } },
  { "TO",                   { 2,  H_KEYWORDS } },
  { "TOP",                  { 3,  H_KEYWORDS } },
  { "TRACE",                { 5,  H_KEYWORDS } },
  { "TRAILING",             { 8,  H_KEYWORDS } },
  { "TRUE",                 { 4,  H_KEYWORDS } },
  { "TYPE",                 { 4,  H_KEYWORDS } },
  { "UNIT",                 { 4,  H_KEYWORDS } },
  { "UNSTRING",             { 8,  H_KEYWORDS } },
  { "UNTIL",                { 5,  H_KEYWORDS } },
  { "UP",                   { 2,  H_KEYWORDS } },
  { "UPON",                 { 4,  H_KEYWORDS } },
  { "USAGE",                { 5,  H_KEYWORDS } },
  { "USE",                  { 3,  H_COMPDIR } },
  { "USING",                { 5,  H_KEYWORDS } },
  { "VALUE",                { 5,  H_KEYWORDS } },
  { "VALUES",               { 6,  H_KEYWORDS } },
  { "VARYING",              { 7,  H_KEYWORDS } },
  { "WHEN",                 { 4,  H_KEYWORDS } },
  { "WHEN-COMPILED",        { 13, H_KEYWORDS } },
  { "WITH",                 { 4,  H_KEYWORDS } },
  { "WORDS",                { 5,  H_KEYWORDS } },
  { "WORKING-STORAGE",      { 15, H_KEYWORDS } },
  { "WRITE",                { 5,  H_KEYWORDS } },
  { "WRITE-ONLY",           { 10, H_KEYWORDS } },
  { "ZERO",                 { 4,  H_KEYWORDS } },
  { "ZEROES",               { 6,  H_KEYWORDS } },
  { "ZEROS",                { 5,  H_KEYWORDS } } } ;


map<string, keyw> kw_jcl = {
  { "CNTL",    { 4,  H_KEYWORDS } },
  { "DLM",     { 3,  H_KEYWORDS } },
  { "EXEC",    { 4,  H_KEYWORDS } },
  { "JOB",     { 3,  H_KEYWORDS } },
  { "SET",     { 3,  H_KEYWORDS } },
  { "COMMAND", { 7,  H_KEYWORDS } },
  { "ELSE",    { 4,  H_KEYWORDS } },
  { "IF",      { 2,  H_KEYWORDS } },
  { "OUTPUT",  { 6,  H_KEYWORDS } },
  { "THEN",    { 4,  H_KEYWORDS } },
  { "DATA",    { 4,  H_KEYWORDS } },
  { "ENDCNTL", { 7,  H_KEYWORDS } },
  { "INCLUDE", { 7,  H_KEYWORDS } },
  { "PEND",    { 4,  H_KEYWORDS } },
  { "XMIT",    { 4,  H_KEYWORDS } },
  { "DD",      { 2,  H_KEYWORDS } },
  { "ENDIF",   { 5,  H_KEYWORDS } },
  { "JCLLIB",  { 6,  H_KEYWORDS } },
  { "PROC",    { 4,  H_KEYWORDS } } } ;


map<int, int> kw_ansi = {
  { 31, N_RED     },
  { 32, N_GREEN   },
  { 33, N_YELLOW  },
  { 34, N_BLUE    },
  { 35, N_MAGENTA },
  { 36, N_TURQ    },
  { 37, N_WHITE   },
  { 41, R_RED     },
  { 42, R_GREEN   },
  { 43, R_YELLOW  },
  { 44, R_BLUE    },
  { 45, R_MAGENTA },
  { 46, R_TURQ    },
  { 47, R_WHITE   },
  { 91, B_RED     },
  { 92, B_GREEN   },
  { 93, B_YELLOW  },
  { 94, B_BLUE    },
  { 95, B_MAGENTA },
  { 96, B_TURQ    },
  { 97, B_WHITE   } } ;


map<string, keyw> kw_bash = {
{ "break",     { 5,   H_KEYWORDS } },
{ "case",      { 4,   H_KEYWORDS } },
{ "continue",  { 8,   H_KEYWORDS } },
{ "do",        { 2,   H_KEYWORDS } },
{ "done",      { 4,   H_KEYWORDS } },
{ "elif",      { 4,   H_KEYWORDS } },
{ "else",      { 4,   H_KEYWORDS } },
{ "esac",      { 4,   H_KEYWORDS } },
{ "fi",        { 2,   H_KEYWORDS } },
{ "for",       { 3,   H_KEYWORDS } },
{ "function",  { 8,   H_KEYWORDS } },
{ "if",        { 2,   H_KEYWORDS } },
{ "in",        { 2,   H_KEYWORDS } },
{ "return",    { 6,   H_KEYWORDS } },
{ "select",    { 6,   H_KEYWORDS } },
{ "then",      { 4,   H_KEYWORDS } },
{ "until",     { 5,   H_KEYWORDS } },
{ "while",     { 5,   H_KEYWORDS } },
{ ".",         { 1,   H_KEYWORDS } },
{ ":",         { 1,   H_KEYWORDS } },
{ "source",    { 6,   H_KEYWORDS } },
{ "alias",     { 5,   H_KEYWORDS } },
{ "bg",        { 2,   H_KEYWORDS } },
{ "bind",      { 4,   H_KEYWORDS } },
{ "builtin",   { 7,   H_KEYWORDS } },
{ "cd",        { 2,   H_KEYWORDS } },
{ "caller",    { 6,   H_KEYWORDS } },
{ "command",   { 7,   H_KEYWORDS } },
{ "compgen",   { 7,   H_KEYWORDS } },
{ "complete",  { 8,   H_KEYWORDS } },
{ "coproc",    { 6,   H_KEYWORDS } },
{ "dirs",      { 4,   H_KEYWORDS } },
{ "disown",    { 6,   H_KEYWORDS } },
{ "echo",      { 4,   H_KEYWORDS } },
{ "enable",    { 6,   H_KEYWORDS } },
{ "eval",      { 4,   H_KEYWORDS } },
{ "exec",      { 4,   H_KEYWORDS } },
{ "exit",      { 4,   H_KEYWORDS } },
{ "fc",        { 2,   H_KEYWORDS } },
{ "fg",        { 2,   H_KEYWORDS } },
{ "hash",      { 4,   H_KEYWORDS } },
{ "help",      { 4,   H_KEYWORDS } },
{ "history",   { 7,   H_KEYWORDS } },
{ "jobs",      { 4,   H_KEYWORDS } },
{ "kill",      { 4,   H_KEYWORDS } },
{ "logout",    { 6,   H_KEYWORDS } },
{ "popd",      { 4,   H_KEYWORDS } },
{ "printf",    { 6,   H_KEYWORDS } },
{ "pushd",     { 5,   H_KEYWORDS } },
{ "pwd",       { 3,   H_KEYWORDS } },
{ "set",       { 3,   H_KEYWORDS } },
{ "shift",     { 5,   H_KEYWORDS } },
{ "shopt",     { 5,   H_KEYWORDS } },
{ "suspend",   { 7,   H_KEYWORDS } },
{ "test",      { 4,   H_KEYWORDS } },
{ "time",      { 4,   H_KEYWORDS } },
{ "times",     { 5,   H_KEYWORDS } },
{ "trap",      { 4,   H_KEYWORDS } },
{ "type",      { 4,   H_KEYWORDS } },
{ "ulimit",    { 6,   H_KEYWORDS } },
{ "umask",     { 5,   H_KEYWORDS } },
{ "unalias",   { 7,   H_KEYWORDS } },
{ "wait",      { 4,   H_KEYWORDS } },
{ "export",    { 6,   H_WHITE  } },
{ "declare",   { 7,   H_WHITE  } },
{ "getopts",   { 7,   H_WHITE  } },
{ "let",       { 3,   H_WHITE  } },
{ "local",     { 5,   H_WHITE  } },
{ "read",      { 4,   H_WHITE  } },
{ "readonly",  { 8,   H_WHITE  } },
{ "typeset",   { 7,   H_WHITE  } },
{ "unset",     { 5,   H_WHITE  } } } ;


map<string, keyw> kw_rust = {
{ "abstract",  { 8,   H_KEYWORDS } },
{ "alignof",   { 7,   H_KEYWORDS } },
{ "as",        { 2,   H_KEYWORDS } },
{ "async",     { 5,   H_KEYWORDS } },
{ "await",     { 5,   H_KEYWORDS } },
{ "become",    { 6,   H_KEYWORDS } },
{ "box",       { 3,   H_KEYWORDS } },
{ "break",     { 5,   H_KEYWORDS } },
{ "const",     { 5,   H_KEYWORDS } },
{ "continue",  { 8,   H_KEYWORDS } },
{ "crate",     { 5,   H_KEYWORDS } },
{ "default",   { 7,   H_KEYWORDS } },
{ "do",        { 2,   H_KEYWORDS } },
{ "dyn",       { 3,   H_KEYWORDS } },
{ "else",      { 4,   H_KEYWORDS } },
{ "enum",      { 4,   H_KEYWORDS } },
{ "extern",    { 6,   H_KEYWORDS } },
{ "final",     { 5,   H_KEYWORDS } },
{ "fn",        { 2,   H_KEYWORDS } },
{ "for",       { 3,   H_KEYWORDS } },
{ "if",        { 2,   H_KEYWORDS } },
{ "impl",      { 4,   H_KEYWORDS } },
{ "in",        { 2,   H_KEYWORDS } },
{ "let",       { 3,   H_KEYWORDS } },
{ "loop",      { 4,   H_KEYWORDS } },
{ "macro",     { 5,   H_KEYWORDS } },
{ "match",     { 5,   H_KEYWORDS } },
{ "mod",       { 3,   H_KEYWORDS } },
{ "move",      { 4,   H_KEYWORDS } },
{ "mut",       { 3,   H_KEYWORDS } },
{ "offsetof",  { 8,   H_KEYWORDS } },
{ "override",  { 8,   H_KEYWORDS } },
{ "priv",      { 4,   H_KEYWORDS } },
{ "proc",      { 4,   H_KEYWORDS } },
{ "pub",       { 3,   H_KEYWORDS } },
{ "pure",      { 4,   H_KEYWORDS } },
{ "ref",       { 3,   H_KEYWORDS } },
{ "return",    { 6,   H_KEYWORDS } },
{ "sizeof",    { 6,   H_KEYWORDS } },
{ "static",    { 6,   H_KEYWORDS } },
{ "struct",    { 6,   H_KEYWORDS } },
{ "super",     { 5,   H_KEYWORDS } },
{ "trait",     { 5,   H_KEYWORDS } },
{ "try",       { 3,   H_KEYWORDS } },
{ "typeof",    { 6,   H_KEYWORDS } },
{ "union",     { 5,   H_KEYWORDS } },
{ "unsafe",    { 6,   H_KEYWORDS } },
{ "unsized",   { 7,   H_KEYWORDS } },
{ "use",       { 3,   H_KEYWORDS } },
{ "virtual",   { 7,   H_KEYWORDS } },
{ "where",     { 5,   H_KEYWORDS } },
{ "while",     { 5,   H_KEYWORDS } },
{ "yield",     { 5,   H_KEYWORDS } } } ;


map<string, keyw> kw_toml = {
{ "true",      { 4,   H_KEYWORDS } },
{ "false",     { 5,   H_KEYWORDS } } } ;
